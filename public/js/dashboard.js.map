{"version":3,"sources":["webpack:///webpack/bootstrap 921b5fb4a3eb94e487d7","webpack:///./resources/assets/js/dashboard.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_initSparklineChart","meta","Dashboard","src","data","color","border","length","config","type","labels","datasets","label","borderColor","borderWidth","pointHoverRadius","pointHoverBorderWidth","pointBackgroundColor","Chart","helpers","alpha","rgbString","pointBorderColor","pointHoverBackgroundColor","mApp","getColor","pointHoverBorderColor","fill","options","title","display","tooltips","enabled","intersect","mode","xPadding","yPadding","caretPadding","legend","usePointStyle","responsive","maintainAspectRatio","hover","scales","xAxes","gridLines","scaleLabel","labelString","yAxes","ticks","beginAtZero","elements","point","radius","layout","padding","left","right","top","bottom","quater1Chart","$","series","value","className","pathLength","donut","id","dur","easing","Chartist","stroke-dasharray","stroke-dashoffset","element","attr","from","to","Svg","Easing","easeOutQuint","stroke","index","animationDefinition","begin","window","__anim21278907124","animate","setTimeout","chart","update","bind","document","find","on","e","dailySales","__anim212789071241111","profitShare","salesStats","salesByApps","latestUpdates","trendsStats","trendsStats2","target","quater2Chart","clearTimeout","latestTrendsMap","financeSummary","isRTL","loop","items","chartContainer","chartData","backgroundColor","barRadius","stacked","personalIncome","Pie","donutWidth","showLabel","_node","getTotalLength","hoverRadius","hoverBorderWidth","ctx","getElementById","getContext","line","tension","gradient","createLinearGradient","addColorStop","datatableLatestOrders","GMaps","div","lat","lng","console","log","Morris","Donut","colors","labelColor","position","activitiesChart","earningsSlide","bandwidthChart2","adWordsStat","picker","start","moment","end","daterangepicker","direction","mUtil","startDate","endDate","opens","ranges","Today","Yesterday","subtract","Last 7 Days","Last 30 Days","This Month","startOf","endOf","Last Month","cb","range","format","html","mDatatable","source","read","url","pageSize","saveState","cookie","webstorage","serverPaging","serverFiltering","serverSorting","theme","class","scroll","height","footer","sortable","filterable","pagination","columns","field","width","selector","textAlign","template","visible","row","status","1","2","3","4","5","6","7","Status","state","Type","overflow","datatable","getPageSize","editable","events","clone","description","add","fullCalendar","defaultDate","eventRender","hasClass","$owl2","event","children","each","initPopover","owlCarousel","append","lenght","animateIn","$owl1","center","trigger","this"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAhB,GACA,IAAAS,EAAAT,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,IAGAzB,IAAA0B,EAAA,+DC5DA,IAGQC,EA2pDgBC,EA9pDpBC,GAGIF,EAAsB,SAASG,EAAKC,EAAMC,EAAOC,GACjD,GAAkB,GAAdH,EAAII,OAAR,CAIA,IAAIC,GACAC,KAAM,OACNL,MACIM,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,WAChGC,WACIC,MAAO,GACPC,YAAaR,EACbS,YAAaR,EAEbS,iBAAkB,EAClBC,sBAAuB,GACvBC,qBAAsBC,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC9DC,iBAAkBJ,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC1DE,0BAA2BC,KAAKC,SAAS,UACzCC,sBAAuBR,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,YACjEM,MAAM,EACNvB,KAAMA,KAGdwB,SACIC,OACIC,SAAS,GAEbC,UACIC,SAAS,EACTC,WAAW,EACXC,KAAM,UACNC,SAAU,GACVC,SAAU,GACVC,aAAc,IAElBC,QACIR,SAAS,EACTpB,QACI6B,eAAe,IAGvBC,YAAY,EACZC,qBAAqB,EACrBC,OACIR,KAAM,SAEVS,QACIC,QACId,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,WAGrBC,QACIlB,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,SAEjBE,OACIC,aAAa,MAKzBC,UACIC,OACIC,OAAQ,EACRvC,YAAa,KAIrBwC,QACIC,SACIC,KAAM,EACNC,MAAO,GACPC,IAAK,EACLC,OAAQ,MAMxB,OAAO,IAAIzC,MAAMf,EAAKK,KAokDNP,aAAM,IAAA2D,EAAA,WAHV,GAOA,GAPAC,EAPI,qCAcJtD,OAPA,CAWQF,mBAAYoB,yCADVqC,SAlBgDC,MAAA,GAuB9DrD,UAAe,SAChBT,MACQI,MADRmB,KAAAC,SAAA,aAxBHsC,MAAA,sBA8BA9D,MACQG,MAAAoB,KAAcC,SAAS,uBAIvBuC,UAAA,SACA5D,MACIC,MAAAmB,KAAAC,SAAoBwC,YAGxBvD,QAAA,SAEIwD,OAAA,EACIC,cACAC,eAGAC,qBAAQC,GACR,aAAAlE,EAAAK,KAAA,CAEA,IAAAwD,EAAA7D,EAAUA,QAAUC,uCAI5BkE,mBAAAN,EAAA,MAAAA,EAAA,cAKAO,uCAEKC,IAAQC,IACTC,MAAAV,EAAsBA,KACtBW,GAAA,MAFJP,OAAAC,SAAAO,IAAAC,OAAAC,aAKApD,KAAA,SACAqD,OAAA5E,EAAAH,KAAAI,QAKR,IAAAD,EAAA6E,QACSC,EAAsB,qBAAAC,MAAA,QAAA/E,EAAA6E,MAAA,WAK3BG,EAAOC,cALXb,qBAAAP,EAAA,KA9EJe,OAAA5E,EAAAH,KAAAI,QA0FKD,EAAAqE,QAAAa,QAAAJ,GAAA,MAKWlB,eAAW,WACX/D,OAAMoF,oBACFhF,aAAOmB,OAAKC,mBADV2D,OAAAC,kBAAA,MAKNtB,yBADJwB,WAAAC,EAAAC,OAAAC,KAAAF,GAAA,UA4Pd5B,IAlWFC,EAAA8B,UAAAC,KAAA,yBAAAC,GAAA,wBAAAC,GAmXO,iCACH,kCACMlC,IACF,MACAmC,mCA9QkB,WAHV,GAOA,GAPAlC,EAPI,qCAcJtD,OAPA,CAWQF,mBAAYoB,yCADVqC,SAlBgDC,MAAA,GAuB9DrD,UAAe,SAChBT,MACQI,MADRmB,KAAAC,SAAA,YAxBHsC,MAAA,sBA8BA9D,MACQG,MAAAoB,KAAcC,SAAS,uBAIvBuC,UAAA,SACA5D,MACIC,MAAAmB,KAAAC,SAAoBwC,aAGxBvD,QAAA,SAEIwD,OAAA,EACIC,cACAC,eAGAC,qBAAQC,GACR,aAAAlE,EAAAK,KAAA,CAEA,IAAAwD,EAAA7D,EAAUA,QAAUC,uCAI5BkE,mBAAAN,EAAA,MAAAA,EAAA,cAKAO,uCAEKC,IAAQC,IACTC,MAAAV,EAAsBA,KACtBW,GAAA,MAFJP,OAAAC,SAAAO,IAAAC,OAAAC,aAKApD,KAAA,SACAqD,OAAA5E,EAAAH,KAAAI,QAKR,IAAAD,EAAA6E,QACSC,EAAsB,qBAAAC,MAAA,QAAA/E,EAAA6E,MAAA,WAK3BG,EAAOY,cALXxB,qBAAAP,EAAA,KA9EJe,OAAA5E,EAAAH,KAAAI,QA0FKD,EAAAqE,QAAAa,QAAAJ,GAAA,MAKWlB,eAAW,WACX/D,OAAM+F,wBACF3F,aAAOmB,OAAKC,uBADV2D,OAAAY,sBAAA,MAKNjC,6BADJwB,WAAAC,EAAAC,OAAAC,KAAAF,GAAA,SA2LRS,GACAC,MACAC,mCA1LkB,WAHV,GAOA,GAPAtC,EAPI,qCAcJtD,OAPA,CAWQF,mBAAYoB,yCADVqC,SAlBgDC,MAAA,GAuB9DrD,UAAe,SAChBT,MACQI,MADRmB,KAAAC,SAAA,WAxBHsC,MAAA,sBA8BA9D,MACQG,MAAAoB,KAAcC,SAAS,sBAIvBuC,UAAA,SACA5D,MACIC,MAAAmB,KAAAC,SAAoBwC,YAGxBvD,QAAA,SAEIwD,OAAA,EACIC,cACAC,eAGAC,qBAAQC,GACR,aAAAlE,EAAAK,KAAA,CAEA,IAAAwD,EAAA7D,EAAUA,QAAUC,uCAI5BkE,mBAAAN,EAAA,MAAAA,EAAA,cAKAO,uCAEKC,IAAQC,IACTC,MAAAV,EAAsBA,KACtBW,GAAA,MAFJP,OAAAC,SAAAO,IAAAC,OAAAC,aAKApD,KAAA,SACAqD,OAAA5E,EAAAH,KAAAI,QAKR,IAAAD,EAAA6E,QACSC,EAAsB,qBAAAC,MAAA,QAAA/E,EAAA6E,MAAA,WAK3BG,EAAOY,cALXxB,qBAAAP,EAAA,KA9EJe,OAAA5E,EAAAH,KAAAI,QA0FKD,EAAAqE,QAAAa,QAAAJ,GAAA,MAKWlB,eAAW,WACX/D,OAAM+F,wBACF3F,aAAOmB,OAAKC,uBADV2D,OAAAY,sBAAA,MAKNjC,6BADJwB,WAAAC,EAAAC,OAAAC,KAAAF,GAAA,SAuGRY,GACAC,MACAC,mCAtGkB,WAHV,GAOA,GAPAzC,EAPI,qCAcJtD,OAPA,CAWQF,mBAAYoB,yCADVqC,SAlBgDC,MAAA,GAuB9DrD,UAAe,SAChBT,MACQI,MADRmB,KAAAC,SAAA,cAxBHsC,MAAA,sBA8BA9D,MACQG,MAAAoB,KAAcC,SAAS,uBAIvBuC,UAAA,SACA5D,MACIC,MAAAmB,KAAAC,SAAoBwC,aAGxBvD,QAAA,SAEIwD,OAAA,EACIC,cACAC,eAGAC,qBAAQC,GACR,aAAAlE,EAAAK,KAAA,CAEA,IAAAwD,EAAA7D,EAAUA,QAAUC,uCAI5BkE,mBAAAN,EAAA,MAAAA,EAAA,cAKAO,uCAEKC,IAAQC,IACTC,MAAAV,EAAsBA,KACtBW,GAAA,MAFJP,OAAAC,SAAAO,IAAAC,OAAAC,aAKApD,KAAA,SACAqD,OAAA5E,EAAAH,KAAAI,QAKR,IAAAD,EAAA6E,QACSC,EAAsB,qBAAAC,MAAA,QAAA/E,EAAA6E,MAAA,WAK3BG,EAAOY,cALXxB,qBAAAP,EAAA,KA9ELe,OAAA5E,EAAAH,KAAAI,QA0FGkG,EAAS1C,QAAK0C,QAALrB,GAAb,MAKCM,EAAAK,GAAK,qBACJW,+BACAC,aAAArB,OAAAY,uBACQZ,OAAKY,sBAAL,MAEIZ,OAAAY,sBAAAT,WAAAC,EAAAC,OAAAC,KAAAF,GAAA,SAmBRkB,QAQAC,gBAjZWC,IAEXC,EACAC,GAriDS,WACb,IAAIC,EAAiBlD,EAAE,wBAEvB,GAA6B,GAAzBkD,EAAexG,OAInB,KAAIyG,GACAtG,QAAS,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YACpLC,WAEIsG,gBAAiBzF,KAAKC,SAAS,WAC/BrB,MACI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAIhE6G,gBAAiB,UACjB7G,MACI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAK5D,IAAIc,MAAM6F,GAClBtG,KAAM,MACNL,KAAM4G,EACNpF,SACIC,OACIC,SAAS,GAEbC,UACIE,WAAW,EACXC,KAAM,UACNC,SAAU,GACVC,SAAU,GACVC,aAAc,IAElBC,QACIR,SAAS,GAEbU,YAAY,EACZC,qBAAqB,EACrByE,UAAW,EACXvE,QACIC,QACId,SAAS,EACTe,WAAW,EACXsE,SAAS,IAEbnE,QACIlB,SAAS,EACTqF,SAAS,EACTtE,WAAW,KAGnBS,QACIC,SACIC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,QAw3DpByD,GA92DqC,GAArCvD,EAAE,yBAAyBtD,QAInB,IAAI+D,SAAS+C,IAAI,yBACzBvD,SACQC,MAAO,GACPC,UAAW,SACX/D,MACII,MAAOmB,KAAKC,SAAS,YAIzBsC,MAAO,GACPC,UAAW,SACX/D,MACII,MAAOmB,KAAKC,SAAS,aAIzBsC,MAAO,GACPC,UAAW,SACX/D,MACII,MAAOmB,KAAKC,SAAS,cAIjCf,QAAS,EAAG,EAAG,KAEfwD,OAAO,EACPoD,WAAY,GACZC,WAAW,IAGT1B,GAAG,OAAQ,SAASzF,GACtB,GAAkB,UAAdA,EAAKK,KAAkB,CAEvB,IAAIwD,EAAa7D,EAAKqE,QAAQ+C,MAAMC,iBAGpCrH,EAAKqE,QAAQC,MACTH,mBAAoBN,EAAa,MAAQA,EAAa,OAI1D,IAAIiB,GACAV,qBACIL,GAAI,OAAS/D,EAAK6E,MAClBb,IAAK,IACLO,MAAOV,EAAa,KACpBW,GAAI,MACJP,OAAQC,SAASO,IAAIC,OAAOC,aAE5BpD,KAAM,SACNqD,OAAU5E,EAAKH,KAAKI,QAKT,IAAfD,EAAK6E,QACLC,EAAoB,qBAAqBC,MAAQ,QAAU/E,EAAK6E,MAAQ,GAAK,QAKjF7E,EAAKqE,QAAQC,MACTF,qBAAsBP,EAAa,KACnCe,OAAU5E,EAAKH,KAAKI,QAKxBD,EAAKqE,QAAQa,QAAQJ,GAAqB,MAoBrC,WACb,GAAwC,GAApCrB,EAAE,wBAAwBtD,OAI9B,KAAIC,GACAC,KAAM,OACNL,MACIM,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,WACnH,UAAW,WAAY,QAAS,SAEpCC,WACIC,MAAO,cACPC,YAAaW,KAAKC,SAAS,SAC3BX,YAAa,EACbG,qBAAsBO,KAAKC,SAAS,SAEpCwF,gBAAiBzF,KAAKC,SAAS,UAE/BF,0BAA2BC,KAAKC,SAAS,UACzCC,sBAAuBR,MAAMC,QAAQd,MAAMmB,KAAKC,SAAS,WAAWL,MAAM,IAAKC,YAC/EjB,MACI,GAAI,GAAI,GACR,GAAI,GAAI,GACR,GAAI,GAAI,GACR,GAAI,GAAI,GACR,GAAI,GAAI,GACR,GAAI,GAAI,OAIpBwB,SACIC,OACIC,SAAS,GAEbC,UACIE,WAAW,EACXC,KAAM,UACNC,SAAU,GACVC,SAAU,GACVC,aAAc,IAElBC,QACIR,SAAS,EACTpB,QACI6B,eAAe,IAGvBC,YAAY,EACZC,qBAAqB,EACrBC,OACIR,KAAM,SAEVS,QACIC,QACId,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,WAGrBC,QACIlB,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,YAKzBI,UACIC,OACIC,OAAQ,EACRvC,YAAa,EAEb4G,YAAa,EACbC,iBAAkB,MAMtB,IAAIzG,MAAM2C,EAAE,wBAAyBrD,IAgsD7C0F,GAzrDJlG,EAAoB6D,EAAE,+BAAgC,GAAI,IAAK,EAAG,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAIrC,KAAKC,SAAS,UAAW,GACtHzB,EAAoB6D,EAAE,+BAAgC,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAIrC,KAAKC,SAAS,UAAW,GACpHzB,EAAoB6D,EAAE,+BAAgC,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAIrC,KAAKC,SAAS,WAAY,GACvHzB,EAAoB6D,EAAE,+BAAgC,EAAG,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAIrC,KAAKC,SAAS,WAAY,GAEzHzB,EAAoB6D,EAAE,+BAAgC,GAAI,IAAK,EAAG,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAIrC,KAAKC,SAAS,UAAW,GACtHzB,EAAoB6D,EAAE,+BAAgC,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAIrC,KAAKC,SAAS,SAAU,GACnHzB,EAAoB6D,EAAE,+BAAgC,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAIrC,KAAKC,SAAS,SAAU,GACrHzB,EAAoB6D,EAAE,+BAAgC,EAAG,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAIrC,KAAKC,SAAS,QAAS,GAKtG,WAChB,GAA2C,GAAvCoC,EAAE,2BAA2BtD,OAIjC,KAAIqH,EAAMjC,SAASkC,eAAe,0BAA0BC,WAAW,MAEnEtH,GACAC,KAAM,OACNL,MACIM,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,WAChGC,WACIC,MAAO,cACPqG,gBAAiBzF,KAAKC,SAAS,UAC/BZ,YAAaW,KAAKC,SAAS,UAC3BR,qBAAsBC,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC9DC,iBAAkBJ,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC1DE,0BAA2BC,KAAKC,SAAS,UACzCC,sBAAuBR,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,YAGjEjB,MACI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,OAI9CwB,SACIC,OACIC,SAAS,GAEbC,UACIE,WAAW,EACXC,KAAM,UACNC,SAAU,GACVC,SAAU,GACVC,aAAc,IAElBC,QACIR,SAAS,GAEbU,YAAY,EACZC,qBAAqB,EACrBC,OACIR,KAAM,SAEVS,QACIC,QACId,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,WAGrBC,QACIlB,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,SAEjBE,OACIC,aAAa,MAIzBC,UACI4E,MACIC,QAAS,MAEb5E,OACIC,OAAQ,EACRvC,YAAa,OAMjB,IAAII,MAAM0G,EAAKpH,OAKb,WACd,GAAyC,GAArCqD,EAAE,yBAAyBtD,OAA/B,CAIA,IAAIqH,EAAMjC,SAASkC,eAAe,wBAAwBC,WAAW,MAEjEG,EAAWL,EAAIM,qBAAqB,EAAG,EAAG,EAAG,KACjDD,EAASE,aAAa,EAAGjH,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,aACnE4G,EAASE,aAAa,EAAGjH,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,aAEjE,IAAIb,GACAC,KAAM,OACNL,MACIM,QACI,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UACvF,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UACvF,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UACvF,UAAW,WAAY,QAAS,SAEpCC,WACIC,MAAO,cACPqG,gBAAiBgB,EACjBpH,YAAa,UAEbI,qBAAsBC,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC9DC,iBAAkBJ,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC1DE,0BAA2BC,KAAKC,SAAS,UACzCC,sBAAuBR,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,YAGjEjB,MACI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,OAIxBwB,SACIC,OACIC,SAAS,GAEbC,UACIE,WAAW,EACXC,KAAM,UACNC,SAAU,GACVC,SAAU,GACVC,aAAc,IAElBC,QACIR,SAAS,GAEbU,YAAY,EACZC,qBAAqB,EACrBC,OACIR,KAAM,SAEVS,QACIC,QACId,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,WAGrBC,QACIlB,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,SAEjBE,OACIC,aAAa,MAIzBC,UACI4E,MACIC,QAAS,KAEb5E,OACIC,OAAQ,EACRvC,YAAa,KAGrBwC,QACIC,SACIC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,MAMZ,IAAIzC,MAAM0G,EAAKpH,IAy/CvB6F,GAp/CW,WACf,GAA2C,GAAvCxC,EAAE,2BAA2BtD,OAIjC,KAAIqH,EAAMjC,SAASkC,eAAe,0BAA0BC,WAAW,MAEnEtH,GACAC,KAAM,OACNL,MACIM,QACI,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UACvF,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UACvF,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UACvF,UAAW,WAAY,QAAS,SAEpCC,WACIC,MAAO,cACPqG,gBAAiB,UACjBpG,YAAaW,KAAKC,SAAS,SAE3BR,qBAAsBC,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC9DC,iBAAkBJ,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC1DE,0BAA2BC,KAAKC,SAAS,UACzCC,sBAAuBR,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,YAGjEjB,MACI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACnC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,OAIxBwB,SACIC,OACIC,SAAS,GAEbC,UACIE,WAAW,EACXC,KAAM,UACNC,SAAU,GACVC,SAAU,GACVC,aAAc,IAElBC,QACIR,SAAS,GAEbU,YAAY,EACZC,qBAAqB,EACrBC,OACIR,KAAM,SAEVS,QACIC,QACId,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,WAGrBC,QACIlB,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,SAEjBE,OACIC,aAAa,MAIzBC,UACI4E,MACIC,QAAS,KAEb5E,OACIC,OAAQ,EACRvC,YAAa,KAGrBwC,QACIC,SACIC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,MAMZ,IAAIzC,MAAM0G,EAAKpH,IAs5CvB4H,GAj5Cc,WAClB,GAA8C,GAA1CvE,EAAE,8BAA8BtD,OAIpC,IACc,IAAI8H,OACVC,IAAK,6BACLC,KAAM,UACNC,KAAM,YAEZ,MAAO1C,GACL2C,QAAQC,IAAI5C,OAO2B,GAAvCjC,EAAE,2BAA2BtD,QAIjCoI,OAAOC,OACHnE,QAAS,yBACTrE,OACQQ,MAAO,WACPmD,MAAO,KAGPnD,MAAO,SACPmD,MAAO,IAGPnD,MAAO,QACPmD,MAAO,KAGf8E,QACIrH,KAAKC,SAAS,UACdD,KAAKC,SAAS,UACdD,KAAKC,SAAS,YAQsB,GAAxCoC,EAAE,4BAA4BtD,QAIlCoI,OAAOC,OACHnE,QAAS,0BACTrE,OACQQ,MAAO,UACPmD,MAAO,KAGPnD,MAAO,SACPmD,MAAO,KAGPnD,MAAO,OACPmD,MAAO,KAGf+E,WAAY,UACZD,QACIrH,KAAKC,SAAS,UACdD,KAAKC,SAAS,SACdD,KAAKC,SAAS,aASuB,GAAzCoC,EAAE,6BAA6BtD,QAIvB,IAAI+D,SAAS+C,IAAI,6BACzBvD,SACQC,MAAO,GACPC,UAAW,SACX/D,MACII,MAAOmB,KAAKC,SAAS,YAIzBsC,MAAO,GACPC,UAAW,SACX/D,MACII,MAAOmB,KAAKC,SAAS,aAIzBsC,MAAO,GACPC,UAAW,SACX/D,MACII,MAAOmB,KAAKC,SAAS,cAIjCf,QAAS,EAAG,EAAG,KAEfwD,OAAO,EACPoD,WAAY,GACZC,WAAW,IAGT1B,GAAG,OAAQ,SAASzF,GACtB,GAAkB,UAAdA,EAAKK,KAAkB,CAEvB,IAAIwD,EAAa7D,EAAKqE,QAAQ+C,MAAMC,iBAGpCrH,EAAKqE,QAAQC,MACTH,mBAAoBN,EAAa,MAAQA,EAAa,OAI1D,IAAIiB,GACAV,qBACIL,GAAI,OAAS/D,EAAK6E,MAClBb,IAAK,IACLO,MAAOV,EAAa,KACpBW,GAAI,MACJP,OAAQC,SAASO,IAAIC,OAAOC,aAE5BpD,KAAM,SACNqD,OAAU5E,EAAKH,KAAKI,QAKT,IAAfD,EAAK6E,QACLC,EAAoB,qBAAqBC,MAAQ,QAAU/E,EAAK6E,MAAQ,GAAK,QAKjF7E,EAAKqE,QAAQC,MACTF,qBAAsBP,EAAa,KACnCe,OAAU5E,EAAKH,KAAKI,QAKxBD,EAAKqE,QAAQa,QAAQJ,GAAqB,MAOhC,WAClB,GAAuC,GAAnCrB,EAAE,uBAAuBtD,OAA7B,CAIA,IAAIqH,EAAMjC,SAASkC,eAAe,sBAAsBC,WAAW,MAE/DG,EAAWL,EAAIM,qBAAqB,EAAG,EAAG,EAAG,KACjDD,EAASE,aAAa,EAAGjH,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,aACjE4G,EAASE,aAAa,EAAGjH,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,aAEnE,IAAIb,GACAC,KAAM,OACNL,MACIM,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,WAChGC,WACIC,MAAO,cACPqG,gBAAiBgB,EACjBpH,YAAa,UAEbI,qBAAsBC,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC9DC,iBAAkBJ,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC1DE,0BAA2BC,KAAKC,SAAS,SACzCC,sBAAuBR,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,YAGjEjB,MACI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,OAI9CwB,SACIC,OACIC,SAAS,GAEbC,UACIG,KAAM,UACND,WAAW,EACX8G,SAAU,UACV5G,SAAU,GACVC,SAAU,GACVC,aAAc,IAElBC,QACIR,SAAS,GAEbU,YAAY,EACZC,qBAAqB,EACrBE,QACIC,QACId,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,WAGrBC,QACIlB,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,SAEjBE,OACIC,aAAa,MAIzBC,UACI4E,MACIC,QAAS,MAEb5E,OACIC,OAAQ,EACRvC,YAAa,KAGrBwC,QACIC,SACIC,KAAM,EACNC,MAAO,EACPC,IAAK,GACLC,OAAQ,MAMZ,IAAIzC,MAAM0G,EAAKpH,IA6pCvBwI,GAxpCc,WAClB,GAAuC,GAAnCnF,EAAE,uBAAuBtD,OAA7B,CAIA,IAAIqH,EAAMjC,SAASkC,eAAe,sBAAsBC,WAAW,MAE/DG,EAAWL,EAAIM,qBAAqB,EAAG,EAAG,EAAG,KACjDD,EAASE,aAAa,EAAGjH,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,aACjE4G,EAASE,aAAa,EAAGjH,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,aAEnE,IAAIb,GACAC,KAAM,OACNL,MACIM,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,WAChGC,WACIC,MAAO,kBACPqG,gBAAiBgB,EACjBpH,YAAaW,KAAKC,SAAS,WAE3BR,qBAAsBC,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC9DC,iBAAkBJ,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC1DE,0BAA2BC,KAAKC,SAAS,UACzCC,sBAAuBR,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,YAGjEjB,MACI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,OAI9CwB,SACIC,OACIC,SAAS,GAEbC,UACIG,KAAM,UACND,WAAW,EACX8G,SAAU,UACV5G,SAAU,GACVC,SAAU,GACVC,aAAc,IAElBC,QACIR,SAAS,GAEbU,YAAY,EACZC,qBAAqB,EACrBE,QACIC,QACId,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,WAGrBC,QACIlB,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,SAEjBE,OACIC,aAAa,MAIzBC,UACI4E,MACIC,QAAS,MAEb5E,OACIC,OAAQ,EACRvC,YAAa,KAGrBwC,QACIC,SACIC,KAAM,EACNC,MAAO,EACPC,IAAK,GACLC,OAAQ,MAMZ,IAAIzC,MAAM0G,EAAKpH,IAgkCvByI,GA3jCc,WAClB,GAAuC,GAAnCpF,EAAE,uBAAuBtD,OAA7B,CAIA,IAAIqH,EAAMjC,SAASkC,eAAe,sBAAsBC,WAAW,MAE/DG,EAAWL,EAAIM,qBAAqB,EAAG,EAAG,EAAG,KACjDD,EAASE,aAAa,EAAGjH,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,aACjE4G,EAASE,aAAa,EAAGjH,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,aAEnE,IAAIb,GACAC,KAAM,OACNL,MACIM,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,WAChGC,WACIC,MAAO,kBACPqG,gBAAiBgB,EACjBpH,YAAaW,KAAKC,SAAS,WAE3BR,qBAAsBC,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC9DC,iBAAkBJ,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC1DE,0BAA2BC,KAAKC,SAAS,UACzCC,sBAAuBR,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,YAGjEjB,MACI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,OAI9CwB,SACIC,OACIC,SAAS,GAEbC,UACIG,KAAM,UACND,WAAW,EACX8G,SAAU,UACV5G,SAAU,GACVC,SAAU,GACVC,aAAc,IAElBC,QACIR,SAAS,GAEbU,YAAY,EACZC,qBAAqB,EACrBE,QACIC,QACId,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,WAGrBC,QACIlB,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,SAEjBE,OACIC,aAAa,MAIzBC,UACI4E,MACIC,QAAS,MAEb5E,OACIC,OAAQ,EACRvC,YAAa,KAGrBwC,QACIC,SACIC,KAAM,EACNC,MAAO,EACPC,IAAK,GACLC,OAAQ,MAMZ,IAAIzC,MAAM0G,EAAKpH,IAm+B1B0I,GA99Ba,WACd,GAA0C,GAAtCrF,EAAE,0BAA0BtD,OAAhC,CAIA,IAAIqH,EAAMjC,SAASkC,eAAe,yBAAyBC,WAAW,MAElEG,EAAWL,EAAIM,qBAAqB,EAAG,EAAG,EAAG,KACjDD,EAASE,aAAa,EAAGjH,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,aACjE4G,EAASE,aAAa,EAAGjH,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,aAEnE,IAAIb,GACAC,KAAM,OACNL,MACIM,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,WAChGC,WACIC,MAAO,gBACPqG,gBAAiBzF,KAAKC,SAAS,SAC/BZ,YAAaW,KAAKC,SAAS,SAE3BR,qBAAsBC,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC9DC,iBAAkBJ,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC1DE,0BAA2BC,KAAKC,SAAS,UACzCC,sBAAuBR,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,YACjEjB,MACI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAGvCQ,MAAO,gBAEPqG,gBAAiBzF,KAAKC,SAAS,UAC/BZ,YAAaW,KAAKC,SAAS,UAE3BR,qBAAsBC,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC9DC,iBAAkBJ,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC1DE,0BAA2BC,KAAKC,SAAS,UACzCC,sBAAuBR,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,YACjEjB,MACI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,OAI9CwB,SACIC,OACIC,SAAS,GAEbC,UACIG,KAAM,UACND,WAAW,EACX8G,SAAU,UACV5G,SAAU,GACVC,SAAU,GACVC,aAAc,IAElBC,QACIR,SAAS,GAEbU,YAAY,EACZC,qBAAqB,EACrBE,QACIC,QACId,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,WAGrBC,QACImE,SAAS,EACTrF,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,SAEjBE,OACIC,aAAa,MAIzBC,UACI4E,MACIC,QAAS,MAEb5E,OACIC,OAAQ,EACRvC,YAAa,KAGrBwC,QACIC,SACIC,KAAM,EACNC,MAAO,EACPC,IAAK,GACLC,OAAQ,MAMZ,IAAIzC,MAAM0G,EAAKpH,IAu1B/B2I,GAl1BqB,WACjB,GAA4C,GAAxCtF,EAAE,4BAA4BtD,OAIlC,KAAIqH,EAAMjC,SAASkC,eAAe,2BAA2BC,WAAW,MAEpEtH,GACAC,KAAM,OACNL,MACIM,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,WAChGC,WACIC,MAAO,gBAEPqG,gBAAiBzF,KAAKC,SAAS,UAC/BZ,YAAaW,KAAKC,SAAS,UAE3BR,qBAAsBC,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC9DC,iBAAkBJ,MAAMC,QAAQd,MAAM,WAAWe,MAAM,GAAGC,YAC1DE,0BAA2BC,KAAKC,SAAS,UACzCC,sBAAuBR,MAAMC,QAAQd,MAAM,WAAWe,MAAM,IAAKC,YACjEjB,MACI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,OAI9CwB,SACIC,OACIC,SAAS,GAEbC,UACIG,KAAM,UACND,WAAW,EACX8G,SAAU,UACV5G,SAAU,GACVC,SAAU,GACVC,aAAc,IAElBC,QACIR,SAAS,GAEbU,YAAY,EACZC,qBAAqB,EACrBE,QACIC,QACId,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,WAGrBC,QACIlB,SAAS,EACTe,WAAW,EACXC,YACIhB,SAAS,EACTiB,YAAa,SAEjBE,OACIC,aAAa,MAIzBC,UACI4E,MACIC,QAAS,MAEb5E,OACIC,OAAQ,EACRvC,YAAa,KAGrBwC,QACIC,SACIC,KAAM,EACNC,MAAO,EACPC,IAAK,GACLC,OAAQ,MAMZ,IAAIzC,MAAM0G,EAAKpH,IAjwCnCmG,GAswCQ3G,EAAoB6D,EAAE,2BAA4B,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAAKrC,KAAKC,SAAS,SAAU,GAClHzB,EAAoB6D,EAAE,2BAA4B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAKrC,KAAKC,SAAS,UAAW,GACpHzB,EAAoB6D,EAAE,2BAA4B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAKrC,KAAKC,SAAS,WAAY,GACrHzB,EAAoB6D,EAAE,2BAA4B,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAKrC,KAAKC,SAAS,UAAW,GA4xB3H2F,IAzxB8B,WACtB,GAAgD,GAA5CvD,EAAE,gCAAgCtD,OAAtC,CAIA,IAAI6I,EAASvF,EAAE,gCACXwF,EAAQC,SACRC,EAAMD,SAoBVF,EAAOI,iBACHC,UAAWC,MAAM9C,QACjB+C,UAAWN,EACXO,QAASL,EACTM,MAAO,OACPC,QACIC,OAAUT,SAAUA,UACpBU,WAAcV,SAASW,SAAS,EAAG,QAASX,SAASW,SAAS,EAAG,SACjEC,eAAgBZ,SAASW,SAAS,EAAG,QAASX,UAC9Ca,gBAAiBb,SAASW,SAAS,GAAI,QAASX,UAChDc,cAAed,SAASe,QAAQ,SAAUf,SAASgB,MAAM,UACzDC,cAAejB,SAASW,SAAS,EAAG,SAASI,QAAQ,SAAUf,SAASW,SAAS,EAAG,SAASK,MAAM,YAExGE,GAEHA,EAAGnB,EAAOE,EAAK,IAjCf,SAASiB,EAAGnB,EAAOE,EAAK3I,GACpB,IAAIiB,EAAQ,GACR4I,EAAQ,GAEPlB,EAAMF,EAAS,KAAgB,SAATzI,GACvBiB,EAAQ,SACR4I,EAAQpB,EAAMqB,OAAO,UACL,aAAT9J,GACPiB,EAAQ,aACR4I,EAAQpB,EAAMqB,OAAO,UAErBD,EAAQpB,EAAMqB,OAAO,SAAW,MAAQnB,EAAImB,OAAO,SAGvDtB,EAAOxD,KAAK,gCAAgC+E,KAAKF,GACjDrB,EAAOxD,KAAK,iCAAiC+E,KAAK9I,OAsBP,IAA3CgC,EAAE,8BAA8BtD,QAIpBsD,EAAE,gBAAgB+G,YAC9BxK,MACIK,KAAM,SACNoK,QACIC,MACIC,IAAK,6GAGbC,SAAU,GACVC,WACIC,QAAQ,EACRC,YAAY,GAEhBC,cAAc,EACdC,iBAAiB,EACjBC,eAAe,GAGnBhI,QACIiI,MAAO,UACPC,MAAO,GACPC,QAAQ,EACRC,OAAQ,IACRC,QAAQ,GAGZC,UAAU,EAEVC,YAAY,EAEZC,YAAY,EAEZC,UACIC,MAAO,WACPnK,MAAO,IACP+J,UAAU,EACVK,MAAO,GACPC,UACIV,MAAO,uCAEXW,UAAW,WAEXH,MAAO,UACPnK,MAAO,WACP+J,SAAU,MACVC,YAAY,EACZI,MAAO,IACPG,SAAU,kCAEVJ,MAAO,WACPnK,MAAO,YACPoK,MAAO,IACPzJ,YACI6J,QAAS,QAGbL,MAAO,WACPnK,MAAO,cAEPmK,MAAO,SACPnK,MAAO,SACPoK,MAAO,IAEPG,SAAU,SAASE,GACf,IAAIC,GACAC,GACI3K,MAAS,UACT2J,MAAS,kBAEbiB,GACI5K,MAAS,YACT2J,MAAS,mBAEbkB,GACI7K,MAAS,WACT2J,MAAS,qBAEbmB,GACI9K,MAAS,UACT2J,MAAS,qBAEboB,GACI/K,MAAS,OACT2J,MAAS,kBAEbqB,GACIhL,MAAS,SACT2J,MAAS,oBAEbsB,GACIjL,MAAS,UACT2J,MAAS,sBAGjB,MAAO,wBAA0Be,EAAOD,EAAIS,QAAQvB,MAAQ,mBAAqBe,EAAOD,EAAIS,QAAQlL,MAAQ,aAGhHmK,MAAO,OACPnK,MAAO,OACPoK,MAAO,IAEPG,SAAU,SAASE,GACf,IAAIC,GACAC,GACI3K,MAAS,SACTmL,MAAS,UAEbP,GACI5K,MAAS,SACTmL,MAAS,WAEbN,GACI7K,MAAS,SACTmL,MAAS,WAGjB,MAAO,iCAAmCT,EAAOD,EAAIW,MAAMD,MAAQ,iEAAmET,EAAOD,EAAIW,MAAMD,MAAQ,KAAOT,EAAOD,EAAIW,MAAMpL,MAAQ,aAGnMmK,MAAO,UACPC,MAAO,IACPpK,MAAO,UACP+J,UAAU,EACVsB,SAAU,UACVd,SAAU,SAASE,EAAKrH,EAAOkI,GAE3B,MAAO,iDADOA,EAAUC,cAAgBnI,GAAU,EAAI,SAAW,8rCAmC/C,WAO1BoI,GAP0B,IAO1BA,iBAP0B9M,OAO1B8M,CAIAC,MACIhE,SAAAe,QAAA,OACIxI,EAAO6I,OADX,WAEWpB,EAAOiE,QAAPtD,SAFX,SAAAS,OAAA,cAGI8C,EAAa9C,OAAA,cACb1G,EAAWuJ,QAAAE,IAAA,SAAA/C,OAAA,cAGX7I,iBAAO6L,cACPF,oBACAnE,QACAE,KAAKD,kBACLtF,eAEJP,MAAA,uCAEI4F,YACAmE,cACAxJ,YAJJ2J,YAMArE,OAAA,cACIzH,SACAwH,MAAOC,UACPkE,aAAa,cACbxJ,YAAW,uCAEfA,UAAA,gDAEIwJ,mBACAnE,YAAOC,0CACPC,MAAKD,OAAO,uBACZtF,WAAW,uBAEfA,UAAA,uBAEIqF,MAAOC,SACPC,MAAKD,OAAO,cACZkE,YAAa,qCACbxJ,UAAW,gDAGXnC,MAAO,gBACPwH,MAAOC,OAAO,cACdkE,YAAa,uCACbxJ,UAAW,+CAGXnC,MAAO,YACPwH,YAAOC,0CACPkE,aAAa,uBAEjBjE,IAAAD,OAAA,uBACInF,UADJ,uBAGIkF,MAAOC,eACPkE,aAAa,cACbxJ,WAAW,cAEfwJ,YAAA,qCACIrJ,UADJ,wBAGIqJ,wCACAnE,MAAOC,OAAO,cAElBkE,YAAA,oCACI3L,UAAO,gDAEP0H,MAAKD,SACLkE,aAAa,cACbxJ,YAAW,6CAGXnC,OACAwH,MAAOC,kBACPkE,aAAa,uBAEjBA,YAAA,4CACI3L,UAAO,uBAEPmC,OACAwJ,wBAEJA,YAAA,qCACI3L,MAAOyH,OAAA,yBAEPtF,mBACAwJ,aAAa,uBAEjBjE,IAAAD,OAAA,uBACIzH,YAAO,2CACPwH,UAAOC,uBAEPkE,gBAEJnE,MAAAC,OAAA,cACIzH,YAAO,0CAEPmC,cACAwJ,aAAa,cAEjBxJ,UAAA,4CACInC,YAAO,0CAEPmC,gBACAwJ,aAAa,cAEjBxJ,UAAA,sBACInC,YAAO,yCAEPmC,mBACAwJ,aAAa,cAEjBxJ,UAAA,4CACInC,YAAO,6CAEPwH,MAAOC,SACPtF,aAAW,cACXwJ,sDAhIkBA,YAAA,6CAoI1BI,uBACIvE,MAAI5E,OAAQoJ,cACRpJ,gCACAA,YAAQrE,sCAEXyB,MAAM,gBACH4C,aAAQmB,cACX5B,UAAUS,qBACPA,YAAQmB,sCAEf/D,MAAA,mBA9ILkJ,IAAA,qBAXJ1B,MAAAC,OAAA,mEA6JIL,YAAgB,uCAGZ6E,YAAU,SAAAC,EAAAtJ,oCAERuJ,EAAWC,KAAM,UAAUhJ,EAAQuI,aAC7B9I,EAAMtE,KAAA,YAAiB6E,OADnCzD,KAAA0M,YAAAzJ,qCAIM0J,EAAYvI,KAAA,aAAAwI,OAAA,+BAAAL,EAAAP,YAAA,cACH5G,EADGhB,KAAA,uBAAAyI,QAAA5J,EAAAmB,KAAA,uBAAAwI,OAAA,+BAAAL,EAAAP,YAAA,iBAUd3G,EAAMhD,EAHQ,iBAIdiD,EAAOjD,EAAA,kEAGT8B,QAAUE,KAAG,gBAASZ,KAvB5B6I,EAAAK,+BA4BI/G,QACAkH,UAAA,cACI1K,UAGC2K,EAAAJ,+BAEDK,QAAIhJ,EACA1B,QACQC,UAGI1D,uBAAOmB,YAAc,WADnB+M,EAAAE,QAAA,kBAAA5K,EAAA6K,MAAAtO,KAAA","file":"/js/dashboard.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 921b5fb4a3eb94e487d7","//== Class definition\r\nvar Dashboard = function() {\r\n\r\n    //== Sparkline Chart helper function\r\n    var _initSparklineChart = function(src, data, color, border) {\r\n        if (src.length == 0) {\r\n            return;\r\n        }\r\n\r\n        var config = {\r\n            type: 'line',\r\n            data: {\r\n                labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\"],\r\n                datasets: [{\r\n                    label: \"\",\r\n                    borderColor: color,\r\n                    borderWidth: border,\r\n\r\n                    pointHoverRadius: 4,\r\n                    pointHoverBorderWidth: 12,\r\n                    pointBackgroundColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointHoverBackgroundColor: mApp.getColor('danger'),\r\n                    pointHoverBorderColor: Chart.helpers.color('#000000').alpha(0.1).rgbString(),\r\n                    fill: false,\r\n                    data: data,\r\n                }]\r\n            },\r\n            options: {\r\n                title: {\r\n                    display: false,\r\n                },\r\n                tooltips: {\r\n                    enabled: false,\r\n                    intersect: false,\r\n                    mode: 'nearest',\r\n                    xPadding: 10,\r\n                    yPadding: 10,\r\n                    caretPadding: 10\r\n                },\r\n                legend: {\r\n                    display: false,\r\n                    labels: {\r\n                        usePointStyle: false\r\n                    }\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: true,\r\n                hover: {\r\n                    mode: 'index'\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Month'\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Value'\r\n                        },\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                },\r\n\r\n                elements: {\r\n                    point: {\r\n                        radius: 4,\r\n                        borderWidth: 12\r\n                    },\r\n                },\r\n\r\n                layout: {\r\n                    padding: {\r\n                        left: 0,\r\n                        right: 10,\r\n                        top: 5,\r\n                        bottom: 0\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        return new Chart(src, config);\r\n    }\r\n\r\n    //== Daily Sales chart.\r\n    //** Based on Chartjs plugin - http://www.chartjs.org/\r\n    var dailySales = function() {\r\n        var chartContainer = $('#m_chart_daily_sales');\r\n\r\n        if (chartContainer.length == 0) {\r\n            return;\r\n        }\r\n\r\n        var chartData = {\r\n            labels: [\"Label 1\", \"Label 2\", \"Label 3\", \"Label 4\", \"Label 5\", \"Label 6\", \"Label 7\", \"Label 8\", \"Label 9\", \"Label 10\", \"Label 11\", \"Label 12\", \"Label 13\", \"Label 14\", \"Label 15\", \"Label 16\"],\r\n            datasets: [{\r\n                //label: 'Dataset 1',\r\n                backgroundColor: mApp.getColor('success'),\r\n                data: [\r\n                    15, 20, 25, 30, 25, 20, 15, 20, 25, 30, 25, 20, 15, 10, 15, 20\r\n                ]\r\n            }, {\r\n                //label: 'Dataset 2',\r\n                backgroundColor: '#f3f3fb',\r\n                data: [\r\n                    15, 20, 25, 30, 25, 20, 15, 20, 25, 30, 25, 20, 15, 10, 15, 20\r\n                ]\r\n            }]\r\n        };\r\n\r\n        var chart = new Chart(chartContainer, {\r\n            type: 'bar',\r\n            data: chartData,\r\n            options: {\r\n                title: {\r\n                    display: false,\r\n                },\r\n                tooltips: {\r\n                    intersect: false,\r\n                    mode: 'nearest',\r\n                    xPadding: 10,\r\n                    yPadding: 10,\r\n                    caretPadding: 10\r\n                },\r\n                legend: {\r\n                    display: false\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                barRadius: 4,\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        stacked: true\r\n                    }],\r\n                    yAxes: [{\r\n                        display: false,\r\n                        stacked: true,\r\n                        gridLines: false\r\n                    }]\r\n                },\r\n                layout: {\r\n                    padding: {\r\n                        left: 0,\r\n                        right: 0,\r\n                        top: 0,\r\n                        bottom: 0\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    //== Profit Share Chart.\r\n    //** Based on Chartist plugin - https://gionkunz.github.io/chartist-js/index.html\r\n    var profitShare = function() {\r\n        if ($('#m_chart_profit_share').length == 0) {\r\n            return;\r\n        }\r\n\r\n        var chart = new Chartist.Pie('#m_chart_profit_share', {\r\n            series: [{\r\n                    value: 32,\r\n                    className: 'custom',\r\n                    meta: {\r\n                        color: mApp.getColor('brand')\r\n                    }\r\n                },\r\n                {\r\n                    value: 32,\r\n                    className: 'custom',\r\n                    meta: {\r\n                        color: mApp.getColor('accent')\r\n                    }\r\n                },\r\n                {\r\n                    value: 36,\r\n                    className: 'custom',\r\n                    meta: {\r\n                        color: mApp.getColor('warning')\r\n                    }\r\n                }\r\n            ],\r\n            labels: [1, 2, 3]\r\n        }, {\r\n            donut: true,\r\n            donutWidth: 17,\r\n            showLabel: false\r\n        });\r\n\r\n        chart.on('draw', function(data) {\r\n            if (data.type === 'slice') {\r\n                // Get the total path length in order to use for dash array animation\r\n                var pathLength = data.element._node.getTotalLength();\r\n\r\n                // Set a dasharray that matches the path length as prerequisite to animate dashoffset\r\n                data.element.attr({\r\n                    'stroke-dasharray': pathLength + 'px ' + pathLength + 'px'\r\n                });\r\n\r\n                // Create animation definition while also assigning an ID to the animation for later sync usage\r\n                var animationDefinition = {\r\n                    'stroke-dashoffset': {\r\n                        id: 'anim' + data.index,\r\n                        dur: 1000,\r\n                        from: -pathLength + 'px',\r\n                        to: '0px',\r\n                        easing: Chartist.Svg.Easing.easeOutQuint,\r\n                        // We need to use `fill: 'freeze'` otherwise our animation will fall back to initial (not visible)\r\n                        fill: 'freeze',\r\n                        'stroke': data.meta.color\r\n                    }\r\n                };\r\n\r\n                // If this was not the first slice, we need to time the animation so that it uses the end sync event of the previous animation\r\n                if (data.index !== 0) {\r\n                    animationDefinition['stroke-dashoffset'].begin = 'anim' + (data.index - 1) + '.end';\r\n                }\r\n\r\n                // We need to set an initial value before the animation starts as we are not in guided mode which would do that for us\r\n\r\n                data.element.attr({\r\n                    'stroke-dashoffset': -pathLength + 'px',\r\n                    'stroke': data.meta.color\r\n                });\r\n\r\n                // We can't use guided mode as the animations need to rely on setting begin manually\r\n                // See http://gionkunz.github.io/chartist-js/api-documentation.html#chartistsvg-function-animate\r\n                data.element.animate(animationDefinition, false);\r\n            }\r\n        });\r\n\r\n        // For the sake of the example we update the chart every time it's created with a delay of 8 seconds\r\n        return;\r\n        \r\n        /*\r\n        chart.on('created', function() {\r\n            if (window.__anim21278907124) {\r\n                clearTimeout(window.__anim21278907124);\r\n                window.__anim21278907124 = null;\r\n            }\r\n            window.__anim21278907124 = setTimeout(chart.update.bind(chart), 15000);\r\n        });\r\n        */\r\n    }\r\n\r\n    //== Sales Stats.\r\n    //** Based on Chartjs plugin - http://www.chartjs.org/\r\n    var salesStats = function() {\r\n        if ($('#m_chart_sales_stats').length == 0) {\r\n            return;\r\n        }\r\n\r\n        var config = {\r\n            type: 'line',\r\n            data: {\r\n                labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\",\r\n                    \"January\", \"February\", \"March\", \"April\"\r\n                ],\r\n                datasets: [{\r\n                    label: \"Sales Stats\",\r\n                    borderColor: mApp.getColor('brand'),\r\n                    borderWidth: 2,\r\n                    pointBackgroundColor: mApp.getColor('brand'),\r\n\r\n                    backgroundColor: mApp.getColor('accent'),\r\n\r\n                    pointHoverBackgroundColor: mApp.getColor('danger'),\r\n                    pointHoverBorderColor: Chart.helpers.color(mApp.getColor('danger')).alpha(0.2).rgbString(),\r\n                    data: [\r\n                        10, 20, 16,\r\n                        18, 12, 40,\r\n                        35, 30, 33,\r\n                        34, 45, 40,\r\n                        60, 55, 70,\r\n                        65, 75, 62\r\n                    ]\r\n                }]\r\n            },\r\n            options: {\r\n                title: {\r\n                    display: false,\r\n                },\r\n                tooltips: {\r\n                    intersect: false,\r\n                    mode: 'nearest',\r\n                    xPadding: 10,\r\n                    yPadding: 10,\r\n                    caretPadding: 10\r\n                },\r\n                legend: {\r\n                    display: false,\r\n                    labels: {\r\n                        usePointStyle: false\r\n                    }\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                hover: {\r\n                    mode: 'index'\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Month'\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Value'\r\n                        }\r\n                    }]\r\n                },\r\n\r\n                elements: {\r\n                    point: {\r\n                        radius: 3,\r\n                        borderWidth: 0,\r\n\r\n                        hoverRadius: 8,\r\n                        hoverBorderWidth: 2\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new Chart($('#m_chart_sales_stats'), config);\r\n    }\r\n\r\n    //== Sales By mUtillication Stats.\r\n    //** Based on Chartjs plugin - http://www.chartjs.org/\r\n    var salesByApps = function() {\r\n        // Init chart instances\r\n        _initSparklineChart($('#m_chart_sales_by_apps_1_1'), [10, 20, -5, 8, -20, -2, -4, 15, 5, 8], mApp.getColor('accent'), 2);\r\n        _initSparklineChart($('#m_chart_sales_by_apps_1_2'), [2, 16, 0, 12, 22, 5, -10, 5, 15, 2], mApp.getColor('danger'), 2);\r\n        _initSparklineChart($('#m_chart_sales_by_apps_1_3'), [15, 5, -10, 5, 16, 22, 6, -6, -12, 5], mApp.getColor('success'), 2);\r\n        _initSparklineChart($('#m_chart_sales_by_apps_1_4'), [8, 18, -12, 12, 22, -2, -14, 16, 18, 2], mApp.getColor('warning'), 2);\r\n\r\n        _initSparklineChart($('#m_chart_sales_by_apps_2_1'), [10, 20, -5, 8, -20, -2, -4, 15, 5, 8], mApp.getColor('danger'), 2);\r\n        _initSparklineChart($('#m_chart_sales_by_apps_2_2'), [2, 16, 0, 12, 22, 5, -10, 5, 15, 2], mApp.getColor('metal'), 2);\r\n        _initSparklineChart($('#m_chart_sales_by_apps_2_3'), [15, 5, -10, 5, 16, 22, 6, -6, -12, 5], mApp.getColor('brand'), 2);\r\n        _initSparklineChart($('#m_chart_sales_by_apps_2_4'), [8, 18, -12, 12, 22, -2, -14, 16, 18, 2], mApp.getColor('info'), 2);\r\n    }\r\n\r\n    //== Latest Updates.\r\n    //** Based on Chartjs plugin - http://www.chartjs.org/\r\n    var latestUpdates = function() {\r\n        if ($('#m_chart_latest_updates').length == 0) {\r\n            return;\r\n        }\r\n\r\n        var ctx = document.getElementById(\"m_chart_latest_updates\").getContext(\"2d\");\r\n\r\n        var config = {\r\n            type: 'line',\r\n            data: {\r\n                labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\"],\r\n                datasets: [{\r\n                    label: \"Sales Stats\",\r\n                    backgroundColor: mApp.getColor('danger'), // Put the gradient here as a fill color\r\n                    borderColor: mApp.getColor('danger'),\r\n                    pointBackgroundColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointHoverBackgroundColor: mApp.getColor('accent'),\r\n                    pointHoverBorderColor: Chart.helpers.color('#000000').alpha(0.1).rgbString(),\r\n\r\n                    //fill: 'start',\r\n                    data: [\r\n                        10, 14, 12, 16, 9, 11, 13, 9, 13, 15\r\n                    ]\r\n                }]\r\n            },\r\n            options: {\r\n                title: {\r\n                    display: false,\r\n                },\r\n                tooltips: {\r\n                    intersect: false,\r\n                    mode: 'nearest',\r\n                    xPadding: 10,\r\n                    yPadding: 10,\r\n                    caretPadding: 10\r\n                },\r\n                legend: {\r\n                    display: false\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                hover: {\r\n                    mode: 'index'\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Month'\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Value'\r\n                        },\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                },\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.0000001\r\n                    },\r\n                    point: {\r\n                        radius: 4,\r\n                        borderWidth: 12\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new Chart(ctx, config);\r\n    }\r\n\r\n    //== Trends Stats.\r\n    //** Based on Chartjs plugin - http://www.chartjs.org/\r\n    var trendsStats = function() {\r\n        if ($('#m_chart_trends_stats').length == 0) {\r\n            return;\r\n        }\r\n\r\n        var ctx = document.getElementById(\"m_chart_trends_stats\").getContext(\"2d\");\r\n\r\n        var gradient = ctx.createLinearGradient(0, 0, 0, 240);\r\n        gradient.addColorStop(0, Chart.helpers.color('#00c5dc').alpha(0.7).rgbString());\r\n        gradient.addColorStop(1, Chart.helpers.color('#f2feff').alpha(0).rgbString());\r\n\r\n        var config = {\r\n            type: 'line',\r\n            data: {\r\n                labels: [\r\n                    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\",\r\n                    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\",\r\n                    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\",\r\n                    \"January\", \"February\", \"March\", \"April\"\r\n                ],\r\n                datasets: [{\r\n                    label: \"Sales Stats\",\r\n                    backgroundColor: gradient, // Put the gradient here as a fill color\r\n                    borderColor: '#0dc8de',\r\n\r\n                    pointBackgroundColor: Chart.helpers.color('#ffffff').alpha(0).rgbString(),\r\n                    pointBorderColor: Chart.helpers.color('#ffffff').alpha(0).rgbString(),\r\n                    pointHoverBackgroundColor: mApp.getColor('danger'),\r\n                    pointHoverBorderColor: Chart.helpers.color('#000000').alpha(0.2).rgbString(),\r\n\r\n                    //fill: 'start',\r\n                    data: [\r\n                        20, 10, 18, 15, 26, 18, 15, 22, 16, 12,\r\n                        12, 13, 10, 18, 14, 24, 16, 12, 19, 21,\r\n                        16, 14, 21, 21, 13, 15, 22, 24, 21, 11,\r\n                        14, 19, 21, 17\r\n                    ]\r\n                }]\r\n            },\r\n            options: {\r\n                title: {\r\n                    display: false,\r\n                },\r\n                tooltips: {\r\n                    intersect: false,\r\n                    mode: 'nearest',\r\n                    xPadding: 10,\r\n                    yPadding: 10,\r\n                    caretPadding: 10\r\n                },\r\n                legend: {\r\n                    display: false\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                hover: {\r\n                    mode: 'index'\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Month'\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Value'\r\n                        },\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                },\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.19\r\n                    },\r\n                    point: {\r\n                        radius: 4,\r\n                        borderWidth: 12\r\n                    }\r\n                },\r\n                layout: {\r\n                    padding: {\r\n                        left: 0,\r\n                        right: 0,\r\n                        top: 5,\r\n                        bottom: 0\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new Chart(ctx, config);\r\n    }\r\n\r\n    //== Trends Stats 2.\r\n    //** Based on Chartjs plugin - http://www.chartjs.org/\r\n    var trendsStats2 = function() {\r\n        if ($('#m_chart_trends_stats_2').length == 0) {\r\n            return;\r\n        }\r\n\r\n        var ctx = document.getElementById(\"m_chart_trends_stats_2\").getContext(\"2d\");\r\n\r\n        var config = {\r\n            type: 'line',\r\n            data: {\r\n                labels: [\r\n                    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\",\r\n                    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\",\r\n                    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\",\r\n                    \"January\", \"February\", \"March\", \"April\"\r\n                ],\r\n                datasets: [{\r\n                    label: \"Sales Stats\",\r\n                    backgroundColor: '#d2f5f9', // Put the gradient here as a fill color\r\n                    borderColor: mApp.getColor('brand'),\r\n\r\n                    pointBackgroundColor: Chart.helpers.color('#ffffff').alpha(0).rgbString(),\r\n                    pointBorderColor: Chart.helpers.color('#ffffff').alpha(0).rgbString(),\r\n                    pointHoverBackgroundColor: mApp.getColor('danger'),\r\n                    pointHoverBorderColor: Chart.helpers.color('#000000').alpha(0.2).rgbString(),\r\n\r\n                    //fill: 'start',\r\n                    data: [\r\n                        20, 10, 18, 15, 32, 18, 15, 22, 8, 6,\r\n                        12, 13, 10, 18, 14, 24, 16, 12, 19, 21,\r\n                        16, 14, 24, 21, 13, 15, 27, 29, 21, 11,\r\n                        14, 19, 21, 17\r\n                    ]\r\n                }]\r\n            },\r\n            options: {\r\n                title: {\r\n                    display: false,\r\n                },\r\n                tooltips: {\r\n                    intersect: false,\r\n                    mode: 'nearest',\r\n                    xPadding: 10,\r\n                    yPadding: 10,\r\n                    caretPadding: 10\r\n                },\r\n                legend: {\r\n                    display: false\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                hover: {\r\n                    mode: 'index'\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Month'\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Value'\r\n                        },\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                },\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.19\r\n                    },\r\n                    point: {\r\n                        radius: 4,\r\n                        borderWidth: 12\r\n                    }\r\n                },\r\n                layout: {\r\n                    padding: {\r\n                        left: 0,\r\n                        right: 0,\r\n                        top: 5,\r\n                        bottom: 0\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new Chart(ctx, config);\r\n    }\r\n\r\n    //== Trends Stats.\r\n    //** Based on Chartjs plugin - http://www.chartjs.org/\r\n    var latestTrendsMap = function() {\r\n        if ($('#m_chart_latest_trends_map').length == 0) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            var map = new GMaps({\r\n                div: '#m_chart_latest_trends_map',\r\n                lat: -12.043333,\r\n                lng: -77.028333\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    //== Revenue Change.\r\n    //** Based on Morris plugin - http://morrisjs.github.io/morris.js/\r\n    var revenueChange = function() {\r\n        if ($('#m_chart_revenue_change').length == 0) {\r\n            return;\r\n        }\r\n\r\n        Morris.Donut({\r\n            element: 'm_chart_revenue_change',\r\n            data: [{\r\n                    label: \"New York\",\r\n                    value: 10\r\n                },\r\n                {\r\n                    label: \"London\",\r\n                    value: 7\r\n                },\r\n                {\r\n                    label: \"Paris\",\r\n                    value: 20\r\n                }\r\n            ],\r\n            colors: [\r\n                mApp.getColor('accent'),\r\n                mApp.getColor('danger'),\r\n                mApp.getColor('brand')\r\n            ],\r\n        });\r\n    }\r\n\r\n    //== Support Tickets Chart.\r\n    //** Based on Morris plugin - http://morrisjs.github.io/morris.js/\r\n    var supportTickets = function() {\r\n        if ($('#m_chart_support_tickets').length == 0) {\r\n            return;\r\n        }\r\n\r\n        Morris.Donut({\r\n            element: 'm_chart_support_tickets',\r\n            data: [{\r\n                    label: \"Margins\",\r\n                    value: 20\r\n                },\r\n                {\r\n                    label: \"Profit\",\r\n                    value: 70\r\n                },\r\n                {\r\n                    label: \"Lost\",\r\n                    value: 10\r\n                }\r\n            ],\r\n            labelColor: '#a7a7c2',\r\n            colors: [\r\n                mApp.getColor('accent'),\r\n                mApp.getColor('brand'),\r\n                mApp.getColor('danger')\r\n            ]\r\n            //formatter: function (x) { return x + \"%\"}\r\n        });\r\n    }\r\n\r\n    //== Support Tickets Chart.\r\n    //** Based on Morris plugin - http://morrisjs.github.io/morris.js/\r\n    var supportTickets2 = function() {\r\n        if ($('#m_chart_support_tickets2').length == 0) {\r\n            return;\r\n        }\r\n\r\n        var chart = new Chartist.Pie('#m_chart_support_tickets2', {\r\n            series: [{\r\n                    value: 32,\r\n                    className: 'custom',\r\n                    meta: {\r\n                        color: mApp.getColor('brand')\r\n                    }\r\n                },\r\n                {\r\n                    value: 32,\r\n                    className: 'custom',\r\n                    meta: {\r\n                        color: mApp.getColor('accent')\r\n                    }\r\n                },\r\n                {\r\n                    value: 36,\r\n                    className: 'custom',\r\n                    meta: {\r\n                        color: mApp.getColor('warning')\r\n                    }\r\n                }\r\n            ],\r\n            labels: [1, 2, 3]\r\n        }, {\r\n            donut: true,\r\n            donutWidth: 17,\r\n            showLabel: false\r\n        });\r\n\r\n        chart.on('draw', function(data) {\r\n            if (data.type === 'slice') {\r\n                // Get the total path length in order to use for dash array animation\r\n                var pathLength = data.element._node.getTotalLength();\r\n\r\n                // Set a dasharray that matches the path length as prerequisite to animate dashoffset\r\n                data.element.attr({\r\n                    'stroke-dasharray': pathLength + 'px ' + pathLength + 'px'\r\n                });\r\n\r\n                // Create animation definition while also assigning an ID to the animation for later sync usage\r\n                var animationDefinition = {\r\n                    'stroke-dashoffset': {\r\n                        id: 'anim' + data.index,\r\n                        dur: 1000,\r\n                        from: -pathLength + 'px',\r\n                        to: '0px',\r\n                        easing: Chartist.Svg.Easing.easeOutQuint,\r\n                        // We need to use `fill: 'freeze'` otherwise our animation will fall back to initial (not visible)\r\n                        fill: 'freeze',\r\n                        'stroke': data.meta.color\r\n                    }\r\n                };\r\n\r\n                // If this was not the first slice, we need to time the animation so that it uses the end sync event of the previous animation\r\n                if (data.index !== 0) {\r\n                    animationDefinition['stroke-dashoffset'].begin = 'anim' + (data.index - 1) + '.end';\r\n                }\r\n\r\n                // We need to set an initial value before the animation starts as we are not in guided mode which would do that for us\r\n\r\n                data.element.attr({\r\n                    'stroke-dashoffset': -pathLength + 'px',\r\n                    'stroke': data.meta.color\r\n                });\r\n\r\n                // We can't use guided mode as the animations need to rely on setting begin manually\r\n                // See http://gionkunz.github.io/chartist-js/api-documentation.html#chartistsvg-function-animate\r\n                data.element.animate(animationDefinition, false);\r\n            }\r\n        });\r\n    }\r\n\r\n    //== Activities Charts.\r\n    //** Based on Chartjs plugin - http://www.chartjs.org/\r\n    var activitiesChart = function() {\r\n        if ($('#m_chart_activities').length == 0) {\r\n            return;\r\n        }\r\n\r\n        var ctx = document.getElementById(\"m_chart_activities\").getContext(\"2d\");\r\n\r\n        var gradient = ctx.createLinearGradient(0, 0, 0, 240);\r\n        gradient.addColorStop(0, Chart.helpers.color('#e14c86').alpha(1).rgbString());\r\n        gradient.addColorStop(1, Chart.helpers.color('#e14c86').alpha(0.3).rgbString());\r\n\r\n        var config = {\r\n            type: 'line',\r\n            data: {\r\n                labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\"],\r\n                datasets: [{\r\n                    label: \"Sales Stats\",\r\n                    backgroundColor: gradient,\r\n                    borderColor: '#e13a58',\r\n\r\n                    pointBackgroundColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointHoverBackgroundColor: mApp.getColor('light'),\r\n                    pointHoverBorderColor: Chart.helpers.color('#ffffff').alpha(0.1).rgbString(),\r\n\r\n                    //fill: 'start',\r\n                    data: [\r\n                        10, 14, 12, 16, 9, 11, 13, 9, 13, 15\r\n                    ]\r\n                }]\r\n            },\r\n            options: {\r\n                title: {\r\n                    display: false,\r\n                },\r\n                tooltips: {\r\n                    mode: 'nearest',\r\n                    intersect: false,\r\n                    position: 'nearest',\r\n                    xPadding: 10,\r\n                    yPadding: 10,\r\n                    caretPadding: 10\r\n                },\r\n                legend: {\r\n                    display: false\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Month'\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Value'\r\n                        },\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                },\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.0000001\r\n                    },\r\n                    point: {\r\n                        radius: 4,\r\n                        borderWidth: 12\r\n                    }\r\n                },\r\n                layout: {\r\n                    padding: {\r\n                        left: 0,\r\n                        right: 0,\r\n                        top: 10,\r\n                        bottom: 0\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new Chart(ctx, config);\r\n    }\r\n\r\n    //== Bandwidth Charts 1.\r\n    //** Based on Chartjs plugin - http://www.chartjs.org/\r\n    var bandwidthChart1 = function() {\r\n        if ($('#m_chart_bandwidth1').length == 0) {\r\n            return;\r\n        }\r\n\r\n        var ctx = document.getElementById(\"m_chart_bandwidth1\").getContext(\"2d\");\r\n\r\n        var gradient = ctx.createLinearGradient(0, 0, 0, 240);\r\n        gradient.addColorStop(0, Chart.helpers.color('#d1f1ec').alpha(1).rgbString());\r\n        gradient.addColorStop(1, Chart.helpers.color('#d1f1ec').alpha(0.3).rgbString());\r\n\r\n        var config = {\r\n            type: 'line',\r\n            data: {\r\n                labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\"],\r\n                datasets: [{\r\n                    label: \"Bandwidth Stats\",\r\n                    backgroundColor: gradient,\r\n                    borderColor: mApp.getColor('success'),\r\n\r\n                    pointBackgroundColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointHoverBackgroundColor: mApp.getColor('danger'),\r\n                    pointHoverBorderColor: Chart.helpers.color('#000000').alpha(0.1).rgbString(),\r\n\r\n                    //fill: 'start',\r\n                    data: [\r\n                        10, 14, 12, 16, 9, 11, 13, 9, 13, 15\r\n                    ]\r\n                }]\r\n            },\r\n            options: {\r\n                title: {\r\n                    display: false,\r\n                },\r\n                tooltips: {\r\n                    mode: 'nearest',\r\n                    intersect: false,\r\n                    position: 'nearest',\r\n                    xPadding: 10,\r\n                    yPadding: 10,\r\n                    caretPadding: 10\r\n                },\r\n                legend: {\r\n                    display: false\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Month'\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Value'\r\n                        },\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                },\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.0000001\r\n                    },\r\n                    point: {\r\n                        radius: 4,\r\n                        borderWidth: 12\r\n                    }\r\n                },\r\n                layout: {\r\n                    padding: {\r\n                        left: 0,\r\n                        right: 0,\r\n                        top: 10,\r\n                        bottom: 0\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new Chart(ctx, config);\r\n    }\r\n\r\n    //== Bandwidth Charts 2.\r\n    //** Based on Chartjs plugin - http://www.chartjs.org/\r\n    var bandwidthChart2 = function() {\r\n        if ($('#m_chart_bandwidth2').length == 0) {\r\n            return;\r\n        }\r\n\r\n        var ctx = document.getElementById(\"m_chart_bandwidth2\").getContext(\"2d\");\r\n\r\n        var gradient = ctx.createLinearGradient(0, 0, 0, 240);\r\n        gradient.addColorStop(0, Chart.helpers.color('#ffefce').alpha(1).rgbString());\r\n        gradient.addColorStop(1, Chart.helpers.color('#ffefce').alpha(0.3).rgbString());\r\n\r\n        var config = {\r\n            type: 'line',\r\n            data: {\r\n                labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\"],\r\n                datasets: [{\r\n                    label: \"Bandwidth Stats\",\r\n                    backgroundColor: gradient,\r\n                    borderColor: mApp.getColor('warning'),\r\n\r\n                    pointBackgroundColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointHoverBackgroundColor: mApp.getColor('danger'),\r\n                    pointHoverBorderColor: Chart.helpers.color('#000000').alpha(0.1).rgbString(),\r\n\r\n                    //fill: 'start',\r\n                    data: [\r\n                        10, 14, 12, 16, 9, 11, 13, 9, 13, 15\r\n                    ]\r\n                }]\r\n            },\r\n            options: {\r\n                title: {\r\n                    display: false,\r\n                },\r\n                tooltips: {\r\n                    mode: 'nearest',\r\n                    intersect: false,\r\n                    position: 'nearest',\r\n                    xPadding: 10,\r\n                    yPadding: 10,\r\n                    caretPadding: 10\r\n                },\r\n                legend: {\r\n                    display: false\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Month'\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Value'\r\n                        },\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                },\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.0000001\r\n                    },\r\n                    point: {\r\n                        radius: 4,\r\n                        borderWidth: 12\r\n                    }\r\n                },\r\n                layout: {\r\n                    padding: {\r\n                        left: 0,\r\n                        right: 0,\r\n                        top: 10,\r\n                        bottom: 0\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new Chart(ctx, config);\r\n    }\r\n\r\n    //== Bandwidth Charts 2.\r\n    //** Based on Chartjs plugin - http://www.chartjs.org/\r\n    var adWordsStat = function() {\r\n        if ($('#m_chart_adwords_stats').length == 0) {\r\n            return;\r\n        }\r\n\r\n        var ctx = document.getElementById(\"m_chart_adwords_stats\").getContext(\"2d\");\r\n\r\n        var gradient = ctx.createLinearGradient(0, 0, 0, 240);\r\n        gradient.addColorStop(0, Chart.helpers.color('#ffefce').alpha(1).rgbString());\r\n        gradient.addColorStop(1, Chart.helpers.color('#ffefce').alpha(0.3).rgbString());\r\n\r\n        var config = {\r\n            type: 'line',\r\n            data: {\r\n                labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\"],\r\n                datasets: [{\r\n                    label: \"AdWord Clicks\",\r\n                    backgroundColor: mApp.getColor('brand'),\r\n                    borderColor: mApp.getColor('brand'),\r\n\r\n                    pointBackgroundColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointHoverBackgroundColor: mApp.getColor('danger'),\r\n                    pointHoverBorderColor: Chart.helpers.color('#000000').alpha(0.1).rgbString(),\r\n                    data: [\r\n                        12, 16, 9, 18, 13, 12, 18, 12, 15, 17\r\n                    ]\r\n                }, {\r\n                    label: \"AdWords Views\",\r\n\r\n                    backgroundColor: mApp.getColor('accent'),\r\n                    borderColor: mApp.getColor('accent'),\r\n\r\n                    pointBackgroundColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointHoverBackgroundColor: mApp.getColor('danger'),\r\n                    pointHoverBorderColor: Chart.helpers.color('#000000').alpha(0.1).rgbString(),\r\n                    data: [\r\n                        10, 14, 12, 16, 9, 11, 13, 9, 13, 15\r\n                    ]\r\n                }]\r\n            },\r\n            options: {\r\n                title: {\r\n                    display: false,\r\n                },\r\n                tooltips: {\r\n                    mode: 'nearest',\r\n                    intersect: false,\r\n                    position: 'nearest',\r\n                    xPadding: 10,\r\n                    yPadding: 10,\r\n                    caretPadding: 10\r\n                },\r\n                legend: {\r\n                    display: false\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Month'\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        stacked: true,\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Value'\r\n                        },\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                },\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.0000001\r\n                    },\r\n                    point: {\r\n                        radius: 4,\r\n                        borderWidth: 12\r\n                    }\r\n                },\r\n                layout: {\r\n                    padding: {\r\n                        left: 0,\r\n                        right: 0,\r\n                        top: 10,\r\n                        bottom: 0\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new Chart(ctx, config);\r\n    }\r\n\r\n    //== Bandwidth Charts 2.\r\n    //** Based on Chartjs plugin - http://www.chartjs.org/\r\n    var financeSummary = function() {\r\n        if ($('#m_chart_finance_summary').length == 0) {\r\n            return;\r\n        }\r\n\r\n        var ctx = document.getElementById(\"m_chart_finance_summary\").getContext(\"2d\");\r\n\r\n        var config = {\r\n            type: 'line',\r\n            data: {\r\n                labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\"],\r\n                datasets: [{\r\n                    label: \"AdWords Views\",\r\n\r\n                    backgroundColor: mApp.getColor('accent'),\r\n                    borderColor: mApp.getColor('accent'),\r\n\r\n                    pointBackgroundColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n                    pointHoverBackgroundColor: mApp.getColor('danger'),\r\n                    pointHoverBorderColor: Chart.helpers.color('#000000').alpha(0.1).rgbString(),\r\n                    data: [\r\n                        10, 14, 12, 16, 9, 11, 13, 9, 13, 15\r\n                    ]\r\n                }]\r\n            },\r\n            options: {\r\n                title: {\r\n                    display: false,\r\n                },\r\n                tooltips: {\r\n                    mode: 'nearest',\r\n                    intersect: false,\r\n                    position: 'nearest',\r\n                    xPadding: 10,\r\n                    yPadding: 10,\r\n                    caretPadding: 10\r\n                },\r\n                legend: {\r\n                    display: false\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Month'\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        display: false,\r\n                        gridLines: false,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Value'\r\n                        },\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                },\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.0000001\r\n                    },\r\n                    point: {\r\n                        radius: 4,\r\n                        borderWidth: 12\r\n                    }\r\n                },\r\n                layout: {\r\n                    padding: {\r\n                        left: 0,\r\n                        right: 0,\r\n                        top: 10,\r\n                        bottom: 0\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new Chart(ctx, config);\r\n    }\r\n\r\n    //== Quick Stat Charts\r\n    var quickStats = function() {\r\n        _initSparklineChart($('#m_chart_quick_stats_1'), [10, 14, 18, 11, 9, 12, 14, 17, 18, 14], mApp.getColor('brand'), 3);\r\n        _initSparklineChart($('#m_chart_quick_stats_2'), [11, 12, 18, 13, 11, 12, 15, 13, 19, 15], mApp.getColor('danger'), 3);\r\n        _initSparklineChart($('#m_chart_quick_stats_3'), [12, 12, 18, 11, 15, 12, 13, 16, 11, 18], mApp.getColor('success'), 3);\r\n        _initSparklineChart($('#m_chart_quick_stats_4'), [11, 9, 13, 18, 13, 15, 14, 13, 18, 15], mApp.getColor('accent'), 3);\r\n    }\r\n\r\n    var daterangepickerInit = function() {\r\n        if ($('#m_dashboard_daterangepicker').length == 0) {\r\n            return;\r\n        }\r\n\r\n        var picker = $('#m_dashboard_daterangepicker');\r\n        var start = moment();\r\n        var end = moment();\r\n\r\n        function cb(start, end, label) {\r\n            var title = '';\r\n            var range = '';\r\n\r\n            if ((end - start) < 100 || label == 'Today') {\r\n                title = 'Today:';\r\n                range = start.format('MMM D');\r\n            } else if (label == 'Yesterday') {\r\n                title = 'Yesterday:';\r\n                range = start.format('MMM D');\r\n            } else {\r\n                range = start.format('MMM D') + ' - ' + end.format('MMM D');\r\n            }\r\n\r\n            picker.find('.m-subheader__daterange-date').html(range);\r\n            picker.find('.m-subheader__daterange-title').html(title);\r\n        }\r\n\r\n        picker.daterangepicker({\r\n            direction: mUtil.isRTL(),\r\n            startDate: start,\r\n            endDate: end,\r\n            opens: 'left',\r\n            ranges: {\r\n                'Today': [moment(), moment()],\r\n                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n                'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n                'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n                'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\r\n            }\r\n        }, cb);\r\n\r\n        cb(start, end, '');\r\n    }\r\n\r\n    var datatableLatestOrders = function() {\r\n        if ($('#m_datatable_latest_orders').length === 0) {\r\n            return;\r\n        }\r\n\r\n        var datatable = $('.m_datatable').mDatatable({\r\n            data: {\r\n                type: 'remote',\r\n                source: {\r\n                    read: {\r\n                        url: 'https://keenthemes.com/metronic/themes/themes/metronic/dist/preview/inc/api/datatables/demos/default.php'\r\n                    }\r\n                },\r\n                pageSize: 10,\r\n                saveState: {\r\n                    cookie: false,\r\n                    webstorage: true\r\n                },\r\n                serverPaging: true,\r\n                serverFiltering: true,\r\n                serverSorting: true\r\n            },\r\n\r\n            layout: {\r\n                theme: 'default',\r\n                class: '',\r\n                scroll: true,\r\n                height: 380,\r\n                footer: false\r\n            },\r\n\r\n            sortable: true,\r\n\r\n            filterable: false,\r\n\r\n            pagination: true,\r\n\r\n            columns: [{\r\n                field: \"RecordID\",\r\n                title: \"#\",\r\n                sortable: false,\r\n                width: 40,\r\n                selector: {\r\n                    class: 'm-checkbox--solid m-checkbox--brand'\r\n                },\r\n                textAlign: 'center'\r\n            }, {\r\n                field: \"OrderID\",\r\n                title: \"Order ID\",\r\n                sortable: 'asc',\r\n                filterable: false,\r\n                width: 150,\r\n                template: '{{OrderID}} - {{ShipCountry}}'\r\n            }, {\r\n                field: \"ShipName\",\r\n                title: \"Ship Name\",\r\n                width: 150,\r\n                responsive: {\r\n                    visible: 'lg'\r\n                }\r\n            }, {\r\n                field: \"ShipDate\",\r\n                title: \"Ship Date\"\r\n            }, {\r\n                field: \"Status\",\r\n                title: \"Status\",\r\n                width: 100,\r\n                // callback function support for column rendering\r\n                template: function(row) {\r\n                    var status = {\r\n                        1: {\r\n                            'title': 'Pending',\r\n                            'class': 'm-badge--brand'\r\n                        },\r\n                        2: {\r\n                            'title': 'Delivered',\r\n                            'class': ' m-badge--metal'\r\n                        },\r\n                        3: {\r\n                            'title': 'Canceled',\r\n                            'class': ' m-badge--primary'\r\n                        },\r\n                        4: {\r\n                            'title': 'Success',\r\n                            'class': ' m-badge--success'\r\n                        },\r\n                        5: {\r\n                            'title': 'Info',\r\n                            'class': ' m-badge--info'\r\n                        },\r\n                        6: {\r\n                            'title': 'Danger',\r\n                            'class': ' m-badge--danger'\r\n                        },\r\n                        7: {\r\n                            'title': 'Warning',\r\n                            'class': ' m-badge--warning'\r\n                        }\r\n                    };\r\n                    return '<span class=\"m-badge ' + status[row.Status].class + ' m-badge--wide\">' + status[row.Status].title + '</span>';\r\n                }\r\n            }, {\r\n                field: \"Type\",\r\n                title: \"Type\",\r\n                width: 100,\r\n                // callback function support for column rendering\r\n                template: function(row) {\r\n                    var status = {\r\n                        1: {\r\n                            'title': 'Online',\r\n                            'state': 'danger'\r\n                        },\r\n                        2: {\r\n                            'title': 'Retail',\r\n                            'state': 'primary'\r\n                        },\r\n                        3: {\r\n                            'title': 'Direct',\r\n                            'state': 'accent'\r\n                        }\r\n                    };\r\n                    return '<span class=\"m-badge m-badge--' + status[row.Type].state + ' m-badge--dot\"></span>&nbsp;<span class=\"m--font-bold m--font-' + status[row.Type].state + '\">' + status[row.Type].title + '</span>';\r\n                }\r\n            }, {\r\n                field: \"Actions\",\r\n                width: 110,\r\n                title: \"Actions\",\r\n                sortable: false,\r\n                overflow: 'visible',\r\n                template: function(row, index, datatable) {\r\n                    var dropup = (datatable.getPageSize() - index) <= 4 ? 'dropup' : '';\r\n                    return '\\\r\n                        <div class=\"dropdown ' + dropup + '\">\\\r\n                            <a href=\"#\" class=\"btn m-btn m-btn--hover-accent m-btn--icon m-btn--icon-only m-btn--pill\" data-toggle=\"dropdown\">\\\r\n                                <i class=\"la la-ellipsis-h\"></i>\\\r\n                            </a>\\\r\n                            <div class=\"dropdown-menu dropdown-menu-right\">\\\r\n                                <a class=\"dropdown-item\" href=\"#\"><i class=\"la la-edit\"></i> Edit Details</a>\\\r\n                                <a class=\"dropdown-item\" href=\"#\"><i class=\"la la-leaf\"></i> Update Status</a>\\\r\n                                <a class=\"dropdown-item\" href=\"#\"><i class=\"la la-print\"></i> Generate Report</a>\\\r\n                            </div>\\\r\n                        </div>\\\r\n                        <a href=\"#\" class=\"m-portlet__nav-link btn m-btn m-btn--hover-accent m-btn--icon m-btn--icon-only m-btn--pill\" title=\"Edit details\">\\\r\n                            <i class=\"la la-edit\"></i>\\\r\n                        </a>\\\r\n                        <a href=\"#\" class=\"m-portlet__nav-link btn m-btn m-btn--hover-danger m-btn--icon m-btn--icon-only m-btn--pill\" title=\"Delete\">\\\r\n                            <i class=\"la la-trash\"></i>\\\r\n                        </a>\\\r\n                    ';\r\n                }\r\n            }]\r\n        });\r\n    }\r\n\r\n    var calendarInit = function() {\r\n        if ($('#m_calendar').length === 0) {\r\n            return;\r\n        }\r\n        \r\n        var todayDate = moment().startOf('day');\r\n        var YM = todayDate.format('YYYY-MM');\r\n        var YESTERDAY = todayDate.clone().subtract(1, 'day').format('YYYY-MM-DD');\r\n        var TODAY = todayDate.format('YYYY-MM-DD');\r\n        var TOMORROW = todayDate.clone().add(1, 'day').format('YYYY-MM-DD');\r\n\r\n        $('#m_calendar').fullCalendar({\r\n            isRTL: mUtil.isRTL(),\r\n            header: {\r\n                left: 'prev,next today',\r\n                center: 'title',\r\n                right: 'month,agendaWeek,agendaDay,listWeek'\r\n            },\r\n            editable: true,\r\n            eventLimit: true, // allow \"more\" link when too many events\r\n            navLinks: true,\r\n            defaultDate: moment('2017-09-15'),\r\n            events: [\r\n                {\r\n                    title: 'Meeting',\r\n                    start: moment('2017-08-28'),\r\n                    description: 'Lorem ipsum dolor sit incid idunt ut',\r\n                    className: \"m-fc-event--light m-fc-event--solid-warning\"\r\n                },\r\n                {\r\n                    title: 'Conference',                    \r\n                    description: 'Lorem ipsum dolor incid idunt ut labore',\r\n                    start: moment('2017-08-29T13:30:00'),\r\n                    end: moment('2017-08-29T17:30:00'),\r\n                    className: \"m-fc-event--accent\"\r\n                },\r\n                {\r\n                    title: 'Dinner',\r\n                    start: moment('2017-08-30'),\r\n                    description: 'Lorem ipsum dolor sit tempor incid',\r\n                    className: \"m-fc-event--light  m-fc-event--solid-danger\"\r\n                },\r\n                {\r\n                    title: 'All Day Event',\r\n                    start: moment('2017-09-01'),\r\n                    description: 'Lorem ipsum dolor sit incid idunt ut',\r\n                    className: \"m-fc-event--danger m-fc-event--solid-focus\"\r\n                },\r\n                {\r\n                    title: 'Reporting',                    \r\n                    description: 'Lorem ipsum dolor incid idunt ut labore',\r\n                    start: moment('2017-09-03T13:30:00'),\r\n                    end: moment('2017-09-04T17:30:00'),\r\n                    className: \"m-fc-event--accent\"\r\n                },\r\n                {\r\n                    title: 'Company Trip',\r\n                    start: moment('2017-09-05'),\r\n                    end: moment('2017-09-07'),\r\n                    description: 'Lorem ipsum dolor sit tempor incid',\r\n                    className: \"m-fc-event--primary\"\r\n                },\r\n                {\r\n                    title: 'ICT Expo 2017 - Product Release',\r\n                    start: moment('2017-09-09'),\r\n                    description: 'Lorem ipsum dolor sit tempor inci',\r\n                    className: \"m-fc-event--light m-fc-event--solid-primary\"\r\n                },\r\n                {\r\n                    title: 'Dinner',\r\n                    start: moment('2017-09-12'),\r\n                    description: 'Lorem ipsum dolor sit amet, conse ctetur'\r\n                },\r\n                {\r\n                    id: 999,\r\n                    title: 'Repeating Event',\r\n                    start: moment('2017-09-15T16:00:00'),\r\n                    description: 'Lorem ipsum dolor sit ncididunt ut labore',\r\n                    className: \"m-fc-event--danger\"\r\n                },\r\n                {\r\n                    id: 1000,\r\n                    title: 'Repeating Event',\r\n                    description: 'Lorem ipsum dolor sit amet, labore',\r\n                    start: moment('2017-09-18T19:00:00'),\r\n                },\r\n                {\r\n                    title: 'Conference',\r\n                    start: moment('2017-09-20T13:00:00'),\r\n                    end: moment('2017-09-21T19:00:00'),\r\n                    description: 'Lorem ipsum dolor eius mod tempor labore',\r\n                    className: \"m-fc-event--accent\"\r\n                },\r\n                {\r\n                    title: 'Meeting',\r\n                    start: moment('2017-09-11'),\r\n                    description: 'Lorem ipsum dolor eiu idunt ut labore'\r\n                },\r\n                {\r\n                    title: 'Lunch',\r\n                    start: moment('2017-09-18'),\r\n                    className: \"m-fc-event--info m-fc-event--solid-accent\",\r\n                    description: 'Lorem ipsum dolor sit amet, ut labore'\r\n                },\r\n                {\r\n                    title: 'Meeting',\r\n                    start: moment('2017-09-24'),\r\n                    className: \"m-fc-event--warning\",\r\n                    description: 'Lorem ipsum conse ctetur adipi scing'\r\n                },\r\n                {\r\n                    title: 'Happy Hour',\r\n                    start: moment('2017-09-24'),\r\n                    className: \"m-fc-event--light m-fc-event--solid-focus\",\r\n                    description: 'Lorem ipsum dolor sit amet, conse ctetur'\r\n                },\r\n                {\r\n                    title: 'Dinner',\r\n                    start: moment('2017-09-24'),\r\n                    className: \"m-fc-event--solid-focus m-fc-event--light\",\r\n                    description: 'Lorem ipsum dolor sit ctetur adipi scing'\r\n                },\r\n                {\r\n                    title: 'Birthday Party',\r\n                    start: moment('2017-09-24'),\r\n                    className: \"m-fc-event--primary\",\r\n                    description: 'Lorem ipsum dolor sit amet, scing'\r\n                },\r\n                {\r\n                    title: 'Company Event',\r\n                    start: moment('2017-09-24'),\r\n                    className: \"m-fc-event--danger\",\r\n                    description: 'Lorem ipsum dolor sit amet, scing'\r\n                },\r\n                {\r\n                    title: 'Click for Google',\r\n                    url: 'http://google.com/',\r\n                    start: moment('2017-09-26'),\r\n                    className: \"m-fc-event--solid-info m-fc-event--light\",\r\n                    description: 'Lorem ipsum dolor sit amet, labore'\r\n                }\r\n            ],\r\n\r\n            eventRender: function(event, element) {\r\n                if (element.hasClass('fc-day-grid-event')) {\r\n                    element.data('content', event.description);\r\n                    element.data('placement', 'top');\r\n                    mApp.initPopover(element);\r\n                } else if (element.hasClass('fc-time-grid-event')) {\r\n                    element.find('.fc-title').append('<div class=\"fc-description\">' + event.description + '</div>');\r\n                } else if (element.find('.fc-list-item-title').lenght !== 0) {\r\n                    element.find('.fc-list-item-title').append('<div class=\"fc-description\">' + event.description + '</div>');\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    var earningsSlide = function() {\r\n\r\n        var $owl1 = $('.owl-carousel');\r\n        var $owl2 = $('#m_widget_body_owlcarousel_items'); \r\n\r\n        $owl1.children().each( function( index ) {\r\n            $(this).attr( 'data-position', index ); \r\n        });\r\n\r\n        $owl2.owlCarousel({   \r\n            rtl: mUtil.isRTL(),\r\n            items: 1,            \r\n            animateIn: 'fadeIn(100)',            \r\n            loop: true,                                              \r\n        });\r\n \r\n        $owl1.owlCarousel({\r\n            rtl: mUtil.isRTL(),\r\n            center: true,\r\n            loop: true,\r\n            items: 2,             \r\n        });\r\n         \r\n        $(document).on('click', '.carousel', function() {\r\n            $owl1.trigger('to.owl.carousel', $(this).data( 'position' ) );\r\n        });  \r\n    }\r\n\r\n    var personalIncome = function() {\r\n        //** Based on Chartist plugin - https://gionkunz.github.io/chartist-js/index.html\r\n        var quater1Chart = function() {\r\n            if ($('#m_chart_personal_income_quater_1').length == 0) {\r\n                return;\r\n            }\r\n\r\n            var chart = new Chartist.Pie('#m_chart_personal_income_quater_1', {\r\n                series: [{\r\n                        value: 32,\r\n                        className: 'custom',\r\n                        meta: {\r\n                            color: mApp.getColor('accent')\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 32,\r\n                        className: 'custom',\r\n                        meta: {\r\n                            color: mApp.getColor('warning')\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 36,\r\n                        className: 'custom',\r\n                        meta: {\r\n                            color: mApp.getColor('brand')\r\n                        }\r\n                    }\r\n                ],\r\n                labels: [1, 2, 3]\r\n            }, {\r\n                donut: true,\r\n                donutWidth: 17,\r\n                showLabel: false\r\n            });\r\n\r\n            chart.on('draw', function(data) {\r\n                if (data.type === 'slice') {\r\n                    // Get the total path length in order to use for dash array animation\r\n                    var pathLength = data.element._node.getTotalLength();\r\n\r\n                    // Set a dasharray that matches the path length as prerequisite to animate dashoffset\r\n                    data.element.attr({\r\n                        'stroke-dasharray': pathLength + 'px ' + pathLength + 'px'\r\n                    });\r\n\r\n                    // Create animation definition while also assigning an ID to the animation for later sync usage\r\n                    var animationDefinition = {\r\n                        'stroke-dashoffset': {\r\n                            id: 'anim' + data.index,\r\n                            dur: 1000,\r\n                            from: -pathLength + 'px',\r\n                            to: '0px',\r\n                            easing: Chartist.Svg.Easing.easeOutQuint,\r\n                            // We need to use `fill: 'freeze'` otherwise our animation will fall back to initial (not visible)\r\n                            fill: 'freeze',\r\n                            'stroke': data.meta.color\r\n                        }\r\n                    };\r\n\r\n                    // If this was not the first slice, we need to time the animation so that it uses the end sync event of the previous animation\r\n                    if (data.index !== 0) {\r\n                        animationDefinition['stroke-dashoffset'].begin = 'anim' + (data.index - 1) + '.end';\r\n                    }\r\n\r\n                    // We need to set an initial value before the animation starts as we are not in guided mode which would do that for us\r\n\r\n                    data.element.attr({\r\n                        'stroke-dashoffset': -pathLength + 'px',\r\n                        'stroke': data.meta.color\r\n                    });\r\n\r\n                    // We can't use guided mode as the animations need to rely on setting begin manually\r\n                    // See http://gionkunz.github.io/chartist-js/api-documentation.html#chartistsvg-function-animate\r\n                    data.element.animate(animationDefinition, false);\r\n                }\r\n            });\r\n\r\n            // For the sake of the example we update the chart every time it's created with a delay of 8 seconds\r\n            chart.on('created', function() {\r\n                if (window.__anim21278907124) {\r\n                    clearTimeout(window.__anim21278907124);\r\n                    window.__anim21278907124 = null;\r\n                }\r\n                window.__anim21278907124 = setTimeout(chart.update.bind(chart), 15000);\r\n            });\r\n        };\r\n\r\n        var quater2Chart = function() {\r\n            if ($('#m_chart_personal_income_quater_2').length == 0) {\r\n                return;\r\n            }\r\n\r\n            var chart = new Chartist.Pie('#m_chart_personal_income_quater_2', {\r\n                series: [{\r\n                        value: 22,\r\n                        className: 'custom',\r\n                        meta: {\r\n                            color: mApp.getColor('focus')\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 44,\r\n                        className: 'custom',\r\n                        meta: {\r\n                            color: mApp.getColor('success')\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 34,\r\n                        className: 'custom',\r\n                        meta: {\r\n                            color: mApp.getColor('danger')\r\n                        }\r\n                    }\r\n                ],\r\n                labels: [1, 2, 3]\r\n            }, {\r\n                donut: true,\r\n                donutWidth: 17,\r\n                showLabel: false\r\n            });\r\n\r\n            chart.on('draw', function(data) {\r\n                if (data.type === 'slice') {\r\n                    // Get the total path length in order to use for dash array animation\r\n                    var pathLength = data.element._node.getTotalLength();\r\n\r\n                    // Set a dasharray that matches the path length as prerequisite to animate dashoffset\r\n                    data.element.attr({\r\n                        'stroke-dasharray': pathLength + 'px ' + pathLength + 'px'\r\n                    });\r\n\r\n                    // Create animation definition while also assigning an ID to the animation for later sync usage\r\n                    var animationDefinition = {\r\n                        'stroke-dashoffset': {\r\n                            id: 'anim' + data.index,\r\n                            dur: 1000,\r\n                            from: -pathLength + 'px',\r\n                            to: '0px',\r\n                            easing: Chartist.Svg.Easing.easeOutQuint,\r\n                            // We need to use `fill: 'freeze'` otherwise our animation will fall back to initial (not visible)\r\n                            fill: 'freeze',\r\n                            'stroke': data.meta.color\r\n                        }\r\n                    };\r\n\r\n                    // If this was not the first slice, we need to time the animation so that it uses the end sync event of the previous animation\r\n                    if (data.index !== 0) {\r\n                        animationDefinition['stroke-dashoffset'].begin = 'anim' + (data.index - 1) + '.end';\r\n                    }\r\n\r\n                    // We need to set an initial value before the animation starts as we are not in guided mode which would do that for us\r\n\r\n                    data.element.attr({\r\n                        'stroke-dashoffset': -pathLength + 'px',\r\n                        'stroke': data.meta.color\r\n                    });\r\n\r\n                    // We can't use guided mode as the animations need to rely on setting begin manually\r\n                    // See http://gionkunz.github.io/chartist-js/api-documentation.html#chartistsvg-function-animate\r\n                    data.element.animate(animationDefinition, false);\r\n                }\r\n            });\r\n\r\n            // For the sake of the example we update the chart every time it's created with a delay of 8 seconds\r\n            chart.on('created', function() {\r\n                if (window.__anim212789071241111) {\r\n                    clearTimeout(window.__anim212789071241111);\r\n                    window.__anim212789071241111 = null;\r\n                }\r\n                window.__anim212789071241111 = setTimeout(chart.update.bind(chart), 15000);\r\n            });\r\n        };\r\n\r\n        var quater3Chart = function() {\r\n            if ($('#m_chart_personal_income_quater_3').length == 0) {\r\n                return;\r\n            }\r\n\r\n            var chart = new Chartist.Pie('#m_chart_personal_income_quater_3', {\r\n                series: [{\r\n                        value: 47,\r\n                        className: 'custom',\r\n                        meta: {\r\n                            color: mApp.getColor('info')\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 55,\r\n                        className: 'custom',\r\n                        meta: {\r\n                            color: mApp.getColor('danger')\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 27,\r\n                        className: 'custom',\r\n                        meta: {\r\n                            color: mApp.getColor('brand')\r\n                        }\r\n                    }\r\n                ],\r\n                labels: [1, 2, 3]\r\n            }, {\r\n                donut: true,\r\n                donutWidth: 17,\r\n                showLabel: false\r\n            });\r\n\r\n            chart.on('draw', function(data) {\r\n                if (data.type === 'slice') {\r\n                    // Get the total path length in order to use for dash array animation\r\n                    var pathLength = data.element._node.getTotalLength();\r\n\r\n                    // Set a dasharray that matches the path length as prerequisite to animate dashoffset\r\n                    data.element.attr({\r\n                        'stroke-dasharray': pathLength + 'px ' + pathLength + 'px'\r\n                    });\r\n\r\n                    // Create animation definition while also assigning an ID to the animation for later sync usage\r\n                    var animationDefinition = {\r\n                        'stroke-dashoffset': {\r\n                            id: 'anim' + data.index,\r\n                            dur: 1000,\r\n                            from: -pathLength + 'px',\r\n                            to: '0px',\r\n                            easing: Chartist.Svg.Easing.easeOutQuint,\r\n                            // We need to use `fill: 'freeze'` otherwise our animation will fall back to initial (not visible)\r\n                            fill: 'freeze',\r\n                            'stroke': data.meta.color\r\n                        }\r\n                    };\r\n\r\n                    // If this was not the first slice, we need to time the animation so that it uses the end sync event of the previous animation\r\n                    if (data.index !== 0) {\r\n                        animationDefinition['stroke-dashoffset'].begin = 'anim' + (data.index - 1) + '.end';\r\n                    }\r\n\r\n                    // We need to set an initial value before the animation starts as we are not in guided mode which would do that for us\r\n\r\n                    data.element.attr({\r\n                        'stroke-dashoffset': -pathLength + 'px',\r\n                        'stroke': data.meta.color\r\n                    });\r\n\r\n                    // We can't use guided mode as the animations need to rely on setting begin manually\r\n                    // See http://gionkunz.github.io/chartist-js/api-documentation.html#chartistsvg-function-animate\r\n                    data.element.animate(animationDefinition, false);\r\n                }\r\n            });\r\n\r\n            // For the sake of the example we update the chart every time it's created with a delay of 8 seconds\r\n            chart.on('created', function() {\r\n                if (window.__anim212789071241111) {\r\n                    clearTimeout(window.__anim212789071241111);\r\n                    window.__anim212789071241111 = null;\r\n                }\r\n                window.__anim212789071241111 = setTimeout(chart.update.bind(chart), 15000);\r\n            });\r\n        };\r\n\r\n       var quater4Chart = function() {\r\n            if ($('#m_chart_personal_income_quater_4').length == 0) {\r\n                return;\r\n            }\r\n\r\n            var chart = new Chartist.Pie('#m_chart_personal_income_quater_4', {\r\n                series: [{\r\n                        value: 37,\r\n                        className: 'custom',\r\n                        meta: {\r\n                            color: mApp.getColor('warning')\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 65,\r\n                        className: 'custom',\r\n                        meta: {\r\n                            color: mApp.getColor('primary')\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 33,\r\n                        className: 'custom',\r\n                        meta: {\r\n                            color: mApp.getColor('danger')\r\n                        }\r\n                    }\r\n                ],\r\n                labels: [1, 2, 3]\r\n            }, {\r\n                donut: true,\r\n                donutWidth: 17,\r\n                showLabel: false\r\n            });\r\n\r\n            chart.on('draw', function(data) {\r\n                if (data.type === 'slice') {\r\n                    // Get the total path length in order to use for dash array animation\r\n                    var pathLength = data.element._node.getTotalLength();\r\n\r\n                    // Set a dasharray that matches the path length as prerequisite to animate dashoffset\r\n                    data.element.attr({\r\n                        'stroke-dasharray': pathLength + 'px ' + pathLength + 'px'\r\n                    });\r\n\r\n                    // Create animation definition while also assigning an ID to the animation for later sync usage\r\n                    var animationDefinition = {\r\n                        'stroke-dashoffset': {\r\n                            id: 'anim' + data.index,\r\n                            dur: 1000,\r\n                            from: -pathLength + 'px',\r\n                            to: '0px',\r\n                            easing: Chartist.Svg.Easing.easeOutQuint,\r\n                            // We need to use `fill: 'freeze'` otherwise our animation will fall back to initial (not visible)\r\n                            fill: 'freeze',\r\n                            'stroke': data.meta.color\r\n                        }\r\n                    };\r\n\r\n                    // If this was not the first slice, we need to time the animation so that it uses the end sync event of the previous animation\r\n                    if (data.index !== 0) {\r\n                        animationDefinition['stroke-dashoffset'].begin = 'anim' + (data.index - 1) + '.end';\r\n                    }\r\n\r\n                    // We need to set an initial value before the animation starts as we are not in guided mode which would do that for us\r\n\r\n                    data.element.attr({\r\n                        'stroke-dashoffset': -pathLength + 'px',\r\n                        'stroke': data.meta.color\r\n                    });\r\n\r\n                    // We can't use guided mode as the animations need to rely on setting begin manually\r\n                    // See http://gionkunz.github.io/chartist-js/api-documentation.html#chartistsvg-function-animate\r\n                    data.element.animate(animationDefinition, false);\r\n                }\r\n            });\r\n\r\n            // For the sake of the example we update the chart every time it's created with a delay of 8 seconds\r\n            chart.on('created', function() {\r\n                if (window.__anim212789071241111) {\r\n                    clearTimeout(window.__anim212789071241111);\r\n                    window.__anim212789071241111 = null;\r\n                }\r\n                window.__anim212789071241111 = setTimeout(chart.update.bind(chart), 15000);\r\n            });\r\n        };\r\n\r\n        quater1Chart();\r\n\r\n\t    $( document ).find( 'a[data-toggle=\"pill\"]' ).on( 'shown.bs.tab', function( e ) {\r\n\t\t    var target = $( e.target ).attr( 'href' );\r\n\t\t    switch ( target ) {\r\n\t\t\t    case '#m_personal_income_quater_1':\r\n\t\t\t\t    quater1Chart();\r\n\t\t\t\t    break;\r\n\t\t\t    case '#m_personal_income_quater_2':\r\n\t\t\t\t    quater2Chart();\r\n\t\t\t\t    break;\r\n                case '#m_personal_income_quater_3':\r\n                    quater3Chart();\r\n                    break;  \r\n                case '#m_personal_income_quater_4':\r\n                    quater4Chart();\r\n                    break;       \r\n\t\t    }\r\n\t    } );\r\n    }\r\n\r\n    return {\r\n        //== Init demos\r\n        init: function() {\r\n            // init charts\r\n            dailySales();\r\n            profitShare();\r\n            salesStats();\r\n            salesByApps();\r\n            latestUpdates();\r\n            trendsStats();\r\n            trendsStats2();\r\n            latestTrendsMap();\r\n            revenueChange();\r\n            supportTickets();\r\n            supportTickets2();\r\n            activitiesChart();\r\n            bandwidthChart1();\r\n            bandwidthChart2();\r\n            adWordsStat();\r\n            financeSummary();\r\n            quickStats();\r\n            personalIncome();\r\n\r\n            // init daterangepicker\r\n            daterangepickerInit();\r\n\r\n            // datatables\r\n            datatableLatestOrders();\r\n\r\n            // calendar\r\n            calendarInit();\r\n\r\n            // earnings slide\r\n            earningsSlide();\r\n        }\r\n    };\r\n}();\r\n\r\n//== Class initialization on page load\r\njQuery(document).ready(function() {\r\n    Dashboard.init();\r\n});\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/dashboard.js"],"sourceRoot":""}